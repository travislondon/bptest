/**
 * generated by Xtext 2.9.2
 */
package org.xtuml.bp.xtext.masl.masl.types;

import org.xtuml.bp.xtext.masl.masl.behavior.Expression;

/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>Abstract Collection Type Reference</b></em>'.
 * <!-- end-user-doc -->
 *
 * <p>
 * The following features are supported:
 * </p>
 * <ul>
 *   <li>{@link org.xtuml.bp.xtext.masl.masl.types.AbstractCollectionTypeReference#isAnonymous <em>Anonymous</em>}</li>
 *   <li>{@link org.xtuml.bp.xtext.masl.masl.types.AbstractCollectionTypeReference#getElementType <em>Element Type</em>}</li>
 * </ul>
 *
 * @see org.xtuml.bp.xtext.masl.masl.types.TypesPackage#getAbstractCollectionTypeReference()
 * @model
 * @generated
 */
public interface AbstractCollectionTypeReference extends AbstractTypeReference, Expression {
	/**
	 * Returns the value of the '<em><b>Anonymous</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Anonymous</em>' attribute isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @return the value of the '<em>Anonymous</em>' attribute.
	 * @see #setAnonymous(boolean)
	 * @see org.xtuml.bp.xtext.masl.masl.types.TypesPackage#getAbstractCollectionTypeReference_Anonymous()
	 * @model unique="false"
	 * @generated
	 */
	boolean isAnonymous();

	/**
	 * Sets the value of the '{@link org.xtuml.bp.xtext.masl.masl.types.AbstractCollectionTypeReference#isAnonymous <em>Anonymous</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @param value the new value of the '<em>Anonymous</em>' attribute.
	 * @see #isAnonymous()
	 * @generated
	 */
	void setAnonymous(boolean value);

	/**
	 * Returns the value of the '<em><b>Element Type</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Element Type</em>' containment reference isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @return the value of the '<em>Element Type</em>' containment reference.
	 * @see #setElementType(AbstractTypeReference)
	 * @see org.xtuml.bp.xtext.masl.masl.types.TypesPackage#getAbstractCollectionTypeReference_ElementType()
	 * @model containment="true"
	 * @generated
	 */
	AbstractTypeReference getElementType();

	/**
	 * Sets the value of the '{@link org.xtuml.bp.xtext.masl.masl.types.AbstractCollectionTypeReference#getElementType <em>Element Type</em>}' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @param value the new value of the '<em>Element Type</em>' containment reference.
	 * @see #getElementType()
	 * @generated
	 */
	void setElementType(AbstractTypeReference value);

} // AbstractCollectionTypeReference
