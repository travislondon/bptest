/**
 * generated by Xtext 2.9.2
 */
package org.xtuml.bp.xtext.masl.masl.structure.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.xtuml.bp.xtext.masl.masl.structure.AssocRelationshipDefinition;
import org.xtuml.bp.xtext.masl.masl.structure.ObjectDeclaration;
import org.xtuml.bp.xtext.masl.masl.structure.RelationshipEnd;
import org.xtuml.bp.xtext.masl.masl.structure.StructurePackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Assoc Relationship Definition</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtuml.bp.xtext.masl.masl.structure.impl.AssocRelationshipDefinitionImpl#getForwards <em>Forwards</em>}</li>
 *   <li>{@link org.xtuml.bp.xtext.masl.masl.structure.impl.AssocRelationshipDefinitionImpl#getBackwards <em>Backwards</em>}</li>
 *   <li>{@link org.xtuml.bp.xtext.masl.masl.structure.impl.AssocRelationshipDefinitionImpl#isOne <em>One</em>}</li>
 *   <li>{@link org.xtuml.bp.xtext.masl.masl.structure.impl.AssocRelationshipDefinitionImpl#getObject <em>Object</em>}</li>
 * </ul>
 *
 * @generated
 */
public class AssocRelationshipDefinitionImpl extends RelationshipDefinitionImpl implements AssocRelationshipDefinition {
	/**
	 * The cached value of the '{@link #getForwards() <em>Forwards</em>}' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getForwards()
	 * @generated
	 * @ordered
	 */
	protected RelationshipEnd forwards;

	/**
	 * The cached value of the '{@link #getBackwards() <em>Backwards</em>}' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getBackwards()
	 * @generated
	 * @ordered
	 */
	protected RelationshipEnd backwards;

	/**
	 * The default value of the '{@link #isOne() <em>One</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #isOne()
	 * @generated
	 * @ordered
	 */
	protected static final boolean ONE_EDEFAULT = false;

	/**
	 * The cached value of the '{@link #isOne() <em>One</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #isOne()
	 * @generated
	 * @ordered
	 */
	protected boolean one = ONE_EDEFAULT;

	/**
	 * The cached value of the '{@link #getObject() <em>Object</em>}' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getObject()
	 * @generated
	 * @ordered
	 */
	protected ObjectDeclaration object;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AssocRelationshipDefinitionImpl() {
		super();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	protected EClass eStaticClass() {
		return StructurePackage.Literals.ASSOC_RELATIONSHIP_DEFINITION;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public RelationshipEnd getForwards() {
		return forwards;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public NotificationChain basicSetForwards(RelationshipEnd newForwards, NotificationChain msgs) {
		RelationshipEnd oldForwards = forwards;
		forwards = newForwards;
		if (eNotificationRequired()) {
			ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, StructurePackage.ASSOC_RELATIONSHIP_DEFINITION__FORWARDS, oldForwards, newForwards);
			if (msgs == null) msgs = notification; else msgs.add(notification);
		}
		return msgs;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setForwards(RelationshipEnd newForwards) {
		if (newForwards != forwards) {
			NotificationChain msgs = null;
			if (forwards != null)
				msgs = ((InternalEObject)forwards).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - StructurePackage.ASSOC_RELATIONSHIP_DEFINITION__FORWARDS, null, msgs);
			if (newForwards != null)
				msgs = ((InternalEObject)newForwards).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - StructurePackage.ASSOC_RELATIONSHIP_DEFINITION__FORWARDS, null, msgs);
			msgs = basicSetForwards(newForwards, msgs);
			if (msgs != null) msgs.dispatch();
		}
		else if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, StructurePackage.ASSOC_RELATIONSHIP_DEFINITION__FORWARDS, newForwards, newForwards));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public RelationshipEnd getBackwards() {
		return backwards;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public NotificationChain basicSetBackwards(RelationshipEnd newBackwards, NotificationChain msgs) {
		RelationshipEnd oldBackwards = backwards;
		backwards = newBackwards;
		if (eNotificationRequired()) {
			ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, StructurePackage.ASSOC_RELATIONSHIP_DEFINITION__BACKWARDS, oldBackwards, newBackwards);
			if (msgs == null) msgs = notification; else msgs.add(notification);
		}
		return msgs;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setBackwards(RelationshipEnd newBackwards) {
		if (newBackwards != backwards) {
			NotificationChain msgs = null;
			if (backwards != null)
				msgs = ((InternalEObject)backwards).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - StructurePackage.ASSOC_RELATIONSHIP_DEFINITION__BACKWARDS, null, msgs);
			if (newBackwards != null)
				msgs = ((InternalEObject)newBackwards).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - StructurePackage.ASSOC_RELATIONSHIP_DEFINITION__BACKWARDS, null, msgs);
			msgs = basicSetBackwards(newBackwards, msgs);
			if (msgs != null) msgs.dispatch();
		}
		else if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, StructurePackage.ASSOC_RELATIONSHIP_DEFINITION__BACKWARDS, newBackwards, newBackwards));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean isOne() {
		return one;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setOne(boolean newOne) {
		boolean oldOne = one;
		one = newOne;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, StructurePackage.ASSOC_RELATIONSHIP_DEFINITION__ONE, oldOne, one));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public ObjectDeclaration getObject() {
		if (object != null && object.eIsProxy()) {
			InternalEObject oldObject = (InternalEObject)object;
			object = (ObjectDeclaration)eResolveProxy(oldObject);
			if (object != oldObject) {
				if (eNotificationRequired())
					eNotify(new ENotificationImpl(this, Notification.RESOLVE, StructurePackage.ASSOC_RELATIONSHIP_DEFINITION__OBJECT, oldObject, object));
			}
		}
		return object;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public ObjectDeclaration basicGetObject() {
		return object;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setObject(ObjectDeclaration newObject) {
		ObjectDeclaration oldObject = object;
		object = newObject;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, StructurePackage.ASSOC_RELATIONSHIP_DEFINITION__OBJECT, oldObject, object));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs) {
		switch (featureID) {
			case StructurePackage.ASSOC_RELATIONSHIP_DEFINITION__FORWARDS:
				return basicSetForwards(null, msgs);
			case StructurePackage.ASSOC_RELATIONSHIP_DEFINITION__BACKWARDS:
				return basicSetBackwards(null, msgs);
		}
		return super.eInverseRemove(otherEnd, featureID, msgs);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object eGet(int featureID, boolean resolve, boolean coreType) {
		switch (featureID) {
			case StructurePackage.ASSOC_RELATIONSHIP_DEFINITION__FORWARDS:
				return getForwards();
			case StructurePackage.ASSOC_RELATIONSHIP_DEFINITION__BACKWARDS:
				return getBackwards();
			case StructurePackage.ASSOC_RELATIONSHIP_DEFINITION__ONE:
				return isOne();
			case StructurePackage.ASSOC_RELATIONSHIP_DEFINITION__OBJECT:
				if (resolve) return getObject();
				return basicGetObject();
		}
		return super.eGet(featureID, resolve, coreType);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void eSet(int featureID, Object newValue) {
		switch (featureID) {
			case StructurePackage.ASSOC_RELATIONSHIP_DEFINITION__FORWARDS:
				setForwards((RelationshipEnd)newValue);
				return;
			case StructurePackage.ASSOC_RELATIONSHIP_DEFINITION__BACKWARDS:
				setBackwards((RelationshipEnd)newValue);
				return;
			case StructurePackage.ASSOC_RELATIONSHIP_DEFINITION__ONE:
				setOne((Boolean)newValue);
				return;
			case StructurePackage.ASSOC_RELATIONSHIP_DEFINITION__OBJECT:
				setObject((ObjectDeclaration)newValue);
				return;
		}
		super.eSet(featureID, newValue);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void eUnset(int featureID) {
		switch (featureID) {
			case StructurePackage.ASSOC_RELATIONSHIP_DEFINITION__FORWARDS:
				setForwards((RelationshipEnd)null);
				return;
			case StructurePackage.ASSOC_RELATIONSHIP_DEFINITION__BACKWARDS:
				setBackwards((RelationshipEnd)null);
				return;
			case StructurePackage.ASSOC_RELATIONSHIP_DEFINITION__ONE:
				setOne(ONE_EDEFAULT);
				return;
			case StructurePackage.ASSOC_RELATIONSHIP_DEFINITION__OBJECT:
				setObject((ObjectDeclaration)null);
				return;
		}
		super.eUnset(featureID);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean eIsSet(int featureID) {
		switch (featureID) {
			case StructurePackage.ASSOC_RELATIONSHIP_DEFINITION__FORWARDS:
				return forwards != null;
			case StructurePackage.ASSOC_RELATIONSHIP_DEFINITION__BACKWARDS:
				return backwards != null;
			case StructurePackage.ASSOC_RELATIONSHIP_DEFINITION__ONE:
				return one != ONE_EDEFAULT;
			case StructurePackage.ASSOC_RELATIONSHIP_DEFINITION__OBJECT:
				return object != null;
		}
		return super.eIsSet(featureID);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public String toString() {
		if (eIsProxy()) return super.toString();

		StringBuffer result = new StringBuffer(super.toString());
		result.append(" (one: ");
		result.append(one);
		result.append(')');
		return result.toString();
	}

} //AssocRelationshipDefinitionImpl
