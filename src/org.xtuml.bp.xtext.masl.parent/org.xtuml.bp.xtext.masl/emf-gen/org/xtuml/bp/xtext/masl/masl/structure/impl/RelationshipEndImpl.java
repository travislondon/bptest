/**
 * generated by Xtext 2.9.2
 */
package org.xtuml.bp.xtext.masl.masl.structure.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.xtuml.bp.xtext.masl.masl.structure.Conditionality;
import org.xtuml.bp.xtext.masl.masl.structure.Multiplicity;
import org.xtuml.bp.xtext.masl.masl.structure.ObjectDeclaration;
import org.xtuml.bp.xtext.masl.masl.structure.RelationshipEnd;
import org.xtuml.bp.xtext.masl.masl.structure.StructurePackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Relationship End</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtuml.bp.xtext.masl.masl.structure.impl.RelationshipEndImpl#getFrom <em>From</em>}</li>
 *   <li>{@link org.xtuml.bp.xtext.masl.masl.structure.impl.RelationshipEndImpl#getConditionality <em>Conditionality</em>}</li>
 *   <li>{@link org.xtuml.bp.xtext.masl.masl.structure.impl.RelationshipEndImpl#getMultiplicity <em>Multiplicity</em>}</li>
 *   <li>{@link org.xtuml.bp.xtext.masl.masl.structure.impl.RelationshipEndImpl#getTo <em>To</em>}</li>
 * </ul>
 *
 * @generated
 */
public class RelationshipEndImpl extends AbstractNamedImpl implements RelationshipEnd {
	/**
	 * The cached value of the '{@link #getFrom() <em>From</em>}' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getFrom()
	 * @generated
	 * @ordered
	 */
	protected ObjectDeclaration from;

	/**
	 * The default value of the '{@link #getConditionality() <em>Conditionality</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getConditionality()
	 * @generated
	 * @ordered
	 */
	protected static final Conditionality CONDITIONALITY_EDEFAULT = Conditionality.UNCONDITIONALLY;

	/**
	 * The cached value of the '{@link #getConditionality() <em>Conditionality</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getConditionality()
	 * @generated
	 * @ordered
	 */
	protected Conditionality conditionality = CONDITIONALITY_EDEFAULT;

	/**
	 * The default value of the '{@link #getMultiplicity() <em>Multiplicity</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getMultiplicity()
	 * @generated
	 * @ordered
	 */
	protected static final Multiplicity MULTIPLICITY_EDEFAULT = Multiplicity.ONE;

	/**
	 * The cached value of the '{@link #getMultiplicity() <em>Multiplicity</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getMultiplicity()
	 * @generated
	 * @ordered
	 */
	protected Multiplicity multiplicity = MULTIPLICITY_EDEFAULT;

	/**
	 * The cached value of the '{@link #getTo() <em>To</em>}' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getTo()
	 * @generated
	 * @ordered
	 */
	protected ObjectDeclaration to;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RelationshipEndImpl() {
		super();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	protected EClass eStaticClass() {
		return StructurePackage.Literals.RELATIONSHIP_END;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public ObjectDeclaration getFrom() {
		if (from != null && from.eIsProxy()) {
			InternalEObject oldFrom = (InternalEObject)from;
			from = (ObjectDeclaration)eResolveProxy(oldFrom);
			if (from != oldFrom) {
				if (eNotificationRequired())
					eNotify(new ENotificationImpl(this, Notification.RESOLVE, StructurePackage.RELATIONSHIP_END__FROM, oldFrom, from));
			}
		}
		return from;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public ObjectDeclaration basicGetFrom() {
		return from;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setFrom(ObjectDeclaration newFrom) {
		ObjectDeclaration oldFrom = from;
		from = newFrom;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, StructurePackage.RELATIONSHIP_END__FROM, oldFrom, from));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Conditionality getConditionality() {
		return conditionality;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setConditionality(Conditionality newConditionality) {
		Conditionality oldConditionality = conditionality;
		conditionality = newConditionality == null ? CONDITIONALITY_EDEFAULT : newConditionality;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, StructurePackage.RELATIONSHIP_END__CONDITIONALITY, oldConditionality, conditionality));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Multiplicity getMultiplicity() {
		return multiplicity;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setMultiplicity(Multiplicity newMultiplicity) {
		Multiplicity oldMultiplicity = multiplicity;
		multiplicity = newMultiplicity == null ? MULTIPLICITY_EDEFAULT : newMultiplicity;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, StructurePackage.RELATIONSHIP_END__MULTIPLICITY, oldMultiplicity, multiplicity));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public ObjectDeclaration getTo() {
		if (to != null && to.eIsProxy()) {
			InternalEObject oldTo = (InternalEObject)to;
			to = (ObjectDeclaration)eResolveProxy(oldTo);
			if (to != oldTo) {
				if (eNotificationRequired())
					eNotify(new ENotificationImpl(this, Notification.RESOLVE, StructurePackage.RELATIONSHIP_END__TO, oldTo, to));
			}
		}
		return to;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public ObjectDeclaration basicGetTo() {
		return to;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setTo(ObjectDeclaration newTo) {
		ObjectDeclaration oldTo = to;
		to = newTo;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, StructurePackage.RELATIONSHIP_END__TO, oldTo, to));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object eGet(int featureID, boolean resolve, boolean coreType) {
		switch (featureID) {
			case StructurePackage.RELATIONSHIP_END__FROM:
				if (resolve) return getFrom();
				return basicGetFrom();
			case StructurePackage.RELATIONSHIP_END__CONDITIONALITY:
				return getConditionality();
			case StructurePackage.RELATIONSHIP_END__MULTIPLICITY:
				return getMultiplicity();
			case StructurePackage.RELATIONSHIP_END__TO:
				if (resolve) return getTo();
				return basicGetTo();
		}
		return super.eGet(featureID, resolve, coreType);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void eSet(int featureID, Object newValue) {
		switch (featureID) {
			case StructurePackage.RELATIONSHIP_END__FROM:
				setFrom((ObjectDeclaration)newValue);
				return;
			case StructurePackage.RELATIONSHIP_END__CONDITIONALITY:
				setConditionality((Conditionality)newValue);
				return;
			case StructurePackage.RELATIONSHIP_END__MULTIPLICITY:
				setMultiplicity((Multiplicity)newValue);
				return;
			case StructurePackage.RELATIONSHIP_END__TO:
				setTo((ObjectDeclaration)newValue);
				return;
		}
		super.eSet(featureID, newValue);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void eUnset(int featureID) {
		switch (featureID) {
			case StructurePackage.RELATIONSHIP_END__FROM:
				setFrom((ObjectDeclaration)null);
				return;
			case StructurePackage.RELATIONSHIP_END__CONDITIONALITY:
				setConditionality(CONDITIONALITY_EDEFAULT);
				return;
			case StructurePackage.RELATIONSHIP_END__MULTIPLICITY:
				setMultiplicity(MULTIPLICITY_EDEFAULT);
				return;
			case StructurePackage.RELATIONSHIP_END__TO:
				setTo((ObjectDeclaration)null);
				return;
		}
		super.eUnset(featureID);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean eIsSet(int featureID) {
		switch (featureID) {
			case StructurePackage.RELATIONSHIP_END__FROM:
				return from != null;
			case StructurePackage.RELATIONSHIP_END__CONDITIONALITY:
				return conditionality != CONDITIONALITY_EDEFAULT;
			case StructurePackage.RELATIONSHIP_END__MULTIPLICITY:
				return multiplicity != MULTIPLICITY_EDEFAULT;
			case StructurePackage.RELATIONSHIP_END__TO:
				return to != null;
		}
		return super.eIsSet(featureID);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public String toString() {
		if (eIsProxy()) return super.toString();

		StringBuffer result = new StringBuffer(super.toString());
		result.append(" (conditionality: ");
		result.append(conditionality);
		result.append(", multiplicity: ");
		result.append(multiplicity);
		result.append(')');
		return result.toString();
	}

} //RelationshipEndImpl
