-- BP 7.1.6 content: ModelClass syschar: 3 persistence-version: 7.1.6

INSERT INTO O_OBJ
	VALUES ("309b5a55-183e-493a-b341-9e38d953a6de",
	'Asynchronous Message',
	1013,
	'MSG_AM',
	'This subclass represents, and holds its unique data, an asynchronous message.
The types of asynchronous messages are:

Informal Asynchronous Message
Event Message',
	"00000000-0000-0000-0000-000000000000");
INSERT INTO O_TFR
	VALUES ("96522206-89ec-43c3-a89b-1277ed48182f",
	"309b5a55-183e-493a-b341-9e38d953a6de",
	'dispose',
	'',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'// dispose any formal asych messages
select one em related by self->MSG_E[R1019];
if(not_empty em)
  unrelate self from em across R1019;
  em.dispose();
end if;
// dispose any informal asynch messages
select one im related by self->MSG_IAM[R1019];
if(not_empty im)
  unrelate self from im across R1019;
  im.dispose();
end if;
select one sigMsg related by self->MSG_SIG[R1019];
if not_empty sigMsg
  unrelate self from sigMsg across R1019;
  sigMsg.dispose();
end if;
// delete supertype, and unrelate
select one msg related by self->MSG_M[R1018];
if(not_empty msg)
  unrelate self from msg across R1018;
  msg.dispose();
end if;
delete object instance self;',
	1,
	'',
	"737edc28-1f60-43a6-8e78-46227a4fa478",
	0);
INSERT INTO O_TFR
	VALUES ("481ec202-fb5d-435c-9f11-919529428c23",
	"309b5a55-183e-493a-b341-9e38d953a6de",
	'unformalize',
	'',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'// dispose the associated event message
select one em related by self->MSG_E[R1019];
select one sigMsg related by self->MSG_SIG[R1019];
if(not_empty em)
  em.dispose();
elif not_empty sigMsg
  sigMsg.dispose();
end if;
// unrelate from target element if under a communication
select one message related by self->MSG_M[R1018];
message.deassociateFromTarget();
self.disposeFormalArguments();
// create an informal asych message
create object instance im of MSG_IAM;
relate im to self across R1019;',
	1,
	'',
	"40a14fbf-1f85-4dcf-9c38-7adf8449f60c",
	0);
INSERT INTO O_TFR
	VALUES ("22bc9e84-85ab-4f7e-aafa-545a8bc7e230",
	"309b5a55-183e-493a-b341-9e38d953a6de",
	'initialize',
	'',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'self.InformalName = "Informal Message";
// create informal subtype
create object instance im of MSG_IAM;
relate im to self across R1019;',
	1,
	'',
	"cf5b9eab-01ad-48eb-8196-24722decdd24",
	0);
INSERT INTO O_TFR
	VALUES ("77bca8ca-ad1a-41c0-ab16-3027722eb379",
	"309b5a55-183e-493a-b341-9e38d953a6de",
	'newArgument',
	'',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'// have the supertype create the argument
select one msg related by self->MSG_M[R1018];
if(not_empty msg)
  msg.newArgument();
end if;',
	1,
	'',
	"22bc9e84-85ab-4f7e-aafa-545a8bc7e230",
	0);
INSERT INTO O_TFR
	VALUES ("737edc28-1f60-43a6-8e78-46227a4fa478",
	"309b5a55-183e-493a-b341-9e38d953a6de",
	'canRename',
	'',
	"ba5eda7a-def5-0000-0000-000000000001",
	1,
	'// only informal messages can be renamed
select one im related by self->MSG_IAM[R1019];
if(not_empty im)
  return true;
else
  return false;
end if;',
	1,
	'',
	"c8d17203-0bd7-4ec1-ac65-2201322dbb1e",
	0);
INSERT INTO O_TFR
	VALUES ("d5362831-5fad-4f51-9b47-e4295ad92246",
	"309b5a55-183e-493a-b341-9e38d953a6de",
	'get_name',
	'',
	"ba5eda7a-def5-0000-0000-000000000004",
	1,
	'return self.Label;',
	1,
	'',
	"412afefb-b115-4943-8d04-7c4f77d760f8",
	0);
INSERT INTO O_TFR
	VALUES ("cf5b9eab-01ad-48eb-8196-24722decdd24",
	"309b5a55-183e-493a-b341-9e38d953a6de",
	'get_style',
	'',
	"6e636321-0fd1-4577-b185-e4d76b0d0c71",
	1,
	'if(param.at == End::End)
  return Style::OpenArrow;
else
  return Style::Solid;
end if;',
	1,
	'',
	"eb10bc06-7aa6-4334-a482-fb92ca67f94b",
	0);
INSERT INTO O_TPARM
	VALUES ("7cd28c24-0cef-4345-9c7b-3e9a2a8e58d3",
	"cf5b9eab-01ad-48eb-8196-24722decdd24",
	'at',
	"ae85eca6-6fe4-4125-95e6-95272f0fd7de",
	0,
	'',
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO S_DT_PROXY
	VALUES ("ae85eca6-6fe4-4125-95e6-95272f0fd7de",
	"00000000-0000-0000-0000-000000000000",
	'End',
	'Text is positioned at a user adjustable offset from the Start, Middle and End of a connector. Start_Fixed and End_Fixed specify fixed position text found at the start and end of some connectors.
-------------------------------------------------------------
Bridge:GD',
	'',
	'../../Datatypes/Datatypes.xtuml');
INSERT INTO S_DT_PROXY
	VALUES ("6e636321-0fd1-4577-b185-e4d76b0d0c71",
	"00000000-0000-0000-0000-000000000000",
	'Style',
	'The Style data type specifies the precise form a graphical element will take when drawn.
--------------------------------------------------------------------------
Bridge:GD',
	'',
	'../../Datatypes/Datatypes.xtuml');
INSERT INTO O_TFR
	VALUES ("412afefb-b115-4943-8d04-7c4f77d760f8",
	"309b5a55-183e-493a-b341-9e38d953a6de",
	'get_connector_text',
	'',
	"ba5eda7a-def5-0000-0000-000000000004",
	1,
	'if(param.at == End::Middle)
  result = self.Label;
  select many args related by self->MSG_M[R1018]->MSG_A[R1001];
  if(not self.isFormal)
    select many args related by self->MSG_M[R1018]->MSG_A[R1000];
  end if;
  if(not_empty args)
    result = result + " (";
    count = 0;
    for each arg in args
      count = count + 1;
      result = result + arg.Label;
      if(count != cardinality args)
        result = result + ", ";
      end if;
    end for;  
    result = result + ")";
  end if;
  if(self.DurationObservation != "")
    result = result  + "  " + self.DurationObservation;
  end if;
  if(self.SequenceNumb != "")
    if(result != "")
      result = ": " + result;
    end if;
    result = self.SequenceNumb + result;
  end if;
  return result;
elif(param.at == End::Start)
  if(self.GuardCondition != "")
    return "[" + self.GuardCondition + "]";
  end if;
  return "";
elif(param.at == End::End)
  if(self.DurationConstraint != "")
    return "{" + self.DurationConstraint + "}";
  else
    return "";
  end if;
else
  return "";
end if;',
	1,
	'',
	"01c9e6f5-cff7-4f78-ba96-27c926dc302c",
	0);
INSERT INTO O_TPARM
	VALUES ("e39b5a2b-fe9f-4e3a-9e64-f27a7095f507",
	"412afefb-b115-4943-8d04-7c4f77d760f8",
	'Obj_ID',
	"ba5eda7a-def5-0000-0000-000000000005",
	0,
	'',
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO O_TPARM
	VALUES ("eb951d34-4f49-4e55-90ee-3437a7f7b7a3",
	"412afefb-b115-4943-8d04-7c4f77d760f8",
	'Obj_TypeIsImported',
	"ba5eda7a-def5-0000-0000-000000000001",
	0,
	'',
	"e39b5a2b-fe9f-4e3a-9e64-f27a7095f507",
	'');
INSERT INTO O_TPARM
	VALUES ("3267a963-7280-40a8-b93e-e5ec5fdcebd5",
	"412afefb-b115-4943-8d04-7c4f77d760f8",
	'at',
	"ae85eca6-6fe4-4125-95e6-95272f0fd7de",
	0,
	'',
	"eb951d34-4f49-4e55-90ee-3437a7f7b7a3",
	'');
INSERT INTO O_TPARM
	VALUES ("ce509ea4-d511-48b2-944e-56193337aeba",
	"412afefb-b115-4943-8d04-7c4f77d760f8",
	'parent_ID',
	"ba5eda7a-def5-0000-0000-000000000005",
	0,
	'',
	"3267a963-7280-40a8-b93e-e5ec5fdcebd5",
	'');
INSERT INTO O_TFR
	VALUES ("c8d17203-0bd7-4ec1-ac65-2201322dbb1e",
	"309b5a55-183e-493a-b341-9e38d953a6de",
	'actionFilter',
	'',
	"ba5eda7a-def5-0000-0000-000000000001",
	1,
	'if(param.name == "can")
  select one packageableElem related by self->MSG_M[R1018]->PE_PE[R8001];
  select one package related by packageableElem->EP_PKG[R8000];
  select one message related by self->MSG_M[R1018];
  if(empty package and message.participatesInCommunication)
    select one package related by self->MSG_M[R1018]->SQ_P[R1007]->PE_PE[R8001]
                                                                ->EP_PKG[R8000];
  end if;
  select one component related by packageableElem->C_C[R8003];
  isInGenericPackage = not_empty package or not_empty component;
  
  if(param.value == "addArg")
    return not self.isFormal;
  elif(param.value == "unform")
    return self.isFormal;
  elif(param.value == "formInstClassEvent")
    select one cip related by self->MSG_M[R1018]->SQ_P[R1007]->SQ_CIP[R930];
    if(not_empty cip)
      // do not allow if on a communication
      if(message.participatesInCommunication)
        return false;
      else
        // if there is only one possible event, and we are formal
        // do not allow
        if(self.isFormal)
          if(cip.getClassEventCount() == 1)
            return false;
          end if;
        end if;
        return cip.formalClassHasCBEvents(checkForCreationEvents:true);
      end if;
    end if;
  elif(param.value == "formClassEvent")
    select one cp related by self->MSG_M[R1018]->SQ_P[R1007]->SQ_CP[R930];
    if(empty cp)
      // try the communication line
      select one cp related by self->MSG_M[R1018]->SQ_P[R1007]->SQ_LS[R930]
                                                      ->SQ_P[R940]->SQ_CP[R930];
    end if;
    if(not_empty cp)
      if(message.participatesInCommunication)
        return false;
      end if;
      // if there is only one possible event, and we are formal
      // do not allow
      if(self.isFormal)
        if(cp.getClassEventCount() == 1)
          return false;
        end if;
      end if;
      return cp.formalClassHasCBEvents();
    end if;
  elif(param.value == "formInstEvent")
    select one ls related by self->MSG_M[R1018]->SQ_P[R1007]->SQ_LS[R930];
    if (not_empty ls)
      select one cip related by ls->SQ_P[R940]->SQ_CIP[R930];
      if(not_empty cip)
        // if there is only one possible event, and we are formal
        // do not allow
        if(self.isFormal)
          if(cip.getInstanceEventCount() == 1)
            return false;
          end if;
        end if;
        return cip.formalClassHasIBEvents();
      end if;  // not_empty cip
    end if; // not_empty ls
  elif(param.value == "formSig")  
    // if there is only one possible interface operation and we are
    // already using it then do not show the menu
    select one signal related by self->MSG_SIG[R1019]->C_AS[R1021];
    if(not_empty signal)
      select one cop related by self->MSG_M[R1018]->SQ_P[R1007]->SQ_COP[R930];
      if(empty cop)
        select one cop related by self->MSG_M[R1018]->SQ_P[R1007]->SQ_LS[R930]
                                                     ->SQ_P[R940]->SQ_COP[R930];
      end if;
      if(not_empty cop)
        if(cop.getInterfaceSignalCount() == 1)
          return false;
        end if;
      end if;
    end if;
  
    select one cop related by self->MSG_M[R1018]->SQ_P[R1007]->SQ_COP[R930];
    if(empty cop)
      select one cop related by self->MSG_M[R1018]->SQ_P[R1007]->SQ_LS[R930]
                                                     ->SQ_P[R940]->SQ_COP[R930];
    end if;
    if(not_empty cop)
      // if on communication do not allow, other filters will handle
      // this
      if(message.participatesInCommunication)
        return false;
      end if;
      return cop.isFormalAndHasSignals();
    end if;
  // the following filtering is used for the communication diagram
  elif(param.value == "formCommClassEvent") or (param.value == "formCommMsgSig")
                                         or (param.value == "formCommInstEvent") 
    pkgID = GD::NULL_UNIQUE_ID();
    // if this message is not shown on a communication diagram
    // do not allow

      // if the above association is not setup, the message is associated with
      // a participant already, get the communication through this participant
      if (not message.participatesInCommunication)
        return false;
      end if;

      pkgID = package.Package_ID;

    // if the selection count does not equal two return false, this
    // prevents the menu entries from existing while only one of the
    // elements is selected
    if(Sel::getCurrentSelectionCount() != 2)
      return false;
    end if;
    // if the selection does not contain a participant
    // do not allow
    if(not Util::selectionContainsValidParticipant(from:Util::getCommunicationInstance(id:pkgID)))
      return false;
    end if;
    // additionally check if this message is already formalized
    // to the only available operation
    if(self.isFormal)
      select one participant related by self->MSG_M[R1018]->SQ_P[R1007];
      if(param.value == "formCommClassEvent")
        select one cp related by participant->SQ_CP[R930];
        if(not_empty cp)
          if(cp.getClassEventCount() == 1)
            return false;
          end if;
        end if;
      elif(param.value == "formCommInstEvent")
        select one cip related by participant->SQ_CIP[R930];
        if(not_empty cip)
          if(cip.getInstanceEventCount() == 1)
            return false;
          end if;
        end if;
      elif(param.value == "formCommMsgSig")
        select one cop related by participant->SQ_COP[R930];
        if(not_empty cop)
          if(cop.getInterfaceSignalCount() == 1)
            return false;
          end if;
        end if;
      end if;
    end if;
    return true;
  end if;
elif(param.name == "show")
  if(param.value == "noTargetMessage")
    if(Sel::getCurrentSelectionCount() != 1)
      return false;
    end if;
    select one target related by self->MSG_M[R1018]->SQ_P[R1007];
    return empty target;
  end if;
end if;
return false;',
	1,
	'',
	"00000000-0000-0000-0000-000000000000",
	0);
INSERT INTO O_TPARM
	VALUES ("f3593422-caeb-4dc9-b005-bee2b000bd82",
	"c8d17203-0bd7-4ec1-ac65-2201322dbb1e",
	'name',
	"ba5eda7a-def5-0000-0000-000000000004",
	0,
	'',
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO O_TPARM
	VALUES ("6a231a83-747f-44e1-8c8c-fc79b169f7b6",
	"c8d17203-0bd7-4ec1-ac65-2201322dbb1e",
	'value',
	"ba5eda7a-def5-0000-0000-000000000004",
	0,
	'',
	"f3593422-caeb-4dc9-b005-bee2b000bd82",
	'');
INSERT INTO O_TFR
	VALUES ("eb10bc06-7aa6-4334-a482-fb92ca67f94b",
	"309b5a55-183e-493a-b341-9e38d953a6de",
	'get_ooa_id',
	'',
	"ba5eda7a-def5-0000-0000-000000000005",
	1,
	'return self.Msg_ID;',
	1,
	'',
	"d5362831-5fad-4f51-9b47-e4295ad92246",
	0);
INSERT INTO O_TFR
	VALUES ("c6f741a6-3df3-4bd6-b1ef-134f34bc0e53",
	"309b5a55-183e-493a-b341-9e38d953a6de",
	'disposeFormalArguments',
	'',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'select one parent related by self->MSG_M[R1018];
parent.disposeFormalArguments();',
	1,
	'',
	"96522206-89ec-43c3-a89b-1277ed48182f",
	0);
INSERT INTO O_TFR
	VALUES ("01c9e6f5-cff7-4f78-ba96-27c926dc302c",
	"309b5a55-183e-493a-b341-9e38d953a6de",
	'formalizeWithEvent',
	'',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'select any event from instances of SM_EVT where (selected.SMevt_ID == param.eventId);
self.prepareForFormalization();
create object instance em of MSG_E;
relate em to self across R1019;
relate em to event across R1009;
select one message related by self->MSG_M[R1018];
// create a message argument for every data item
// assigned to this event
select many evtdis related by event->SM_EVTDI[R532];
for each evtdi in evtdis
  create object instance arg of MSG_A;
  create object instance earg of MSG_EA;
  relate arg to message across R1001;
  relate earg to arg across R1013;
  relate earg to evtdi across R1017;
  arg.Value = "";
end for;  
',
	1,
	'',
	"c6f741a6-3df3-4bd6-b1ef-134f34bc0e53",
	0);
INSERT INTO O_TPARM
	VALUES ("bd79e246-88ca-47be-b733-51b0b3cc1ad5",
	"01c9e6f5-cff7-4f78-ba96-27c926dc302c",
	'eventId',
	"ba5eda7a-def5-0000-0000-000000000005",
	0,
	'',
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO O_TFR
	VALUES ("40a14fbf-1f85-4dcf-9c38-7adf8449f60c",
	"309b5a55-183e-493a-b341-9e38d953a6de",
	'prepareForFormalization',
	'',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'select one eem related by self->MSG_E[R1019];
select one im related by self->MSG_IAM[R1019];
select one sig related by self->MSG_SIG[R1019];
select one message related by self->MSG_M[R1018];
if(not_empty im)
  unrelate im from self across R1019;
  im.dispose();
elif(not_empty eem)
  unrelate eem from self across R1019;
  eem.dispose();
  message.disposeFormalArguments();
elif not_empty sig
  unrelate self from sig across R1019;
  sig.dispose();
  message.disposeFormalArguments();
end if;

',
	1,
	'',
	"77bca8ca-ad1a-41c0-ab16-3027722eb379",
	0);
INSERT INTO O_TFR
	VALUES ("4f049908-4e0e-46fb-afac-dd0600b848ce",
	"309b5a55-183e-493a-b341-9e38d953a6de",
	'formalizeWithSignal',
	'',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'select any sigProp from instances of C_EP where selected.Id == param.signalId;
if not_empty sigProp
  select one sig related by sigProp->C_AS[R4004];
  if not_empty sig
    self.prepareForFormalization();
    create object instance sigM of MSG_SIG;
    relate sigM to self across R1019;
    relate sigM to sig across R1021;
    select one message related by self->MSG_M[R1018];
    // create a message argument for every parameter
    // assigned to this signal
    select many parms related by sigProp->C_PP[R4006];
    for each parm in parms
      create object instance arg of MSG_A;
      create object instance eparg of MSG_EPA;
      relate arg to message across R1001;
      relate eparg to arg across R1013;
      relate eparg to parm across R1023;
      arg.Value = "";
    end for;
  end if;
end if;
',
	1,
	'',
	"481ec202-fb5d-435c-9f11-919529428c23",
	0);
INSERT INTO O_TPARM
	VALUES ("e5fc25cd-63d6-4232-8d40-16ed6b7b4c79",
	"4f049908-4e0e-46fb-afac-dd0600b848ce",
	'signalId',
	"ba5eda7a-def5-0000-0000-000000000005",
	0,
	'',
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO O_TFR
	VALUES ("feb71948-aec6-4b80-98fb-9790f9a89bf5",
	"309b5a55-183e-493a-b341-9e38d953a6de",
	'canFormalizeUsingInterfaceSignal',
	'',
	"ba5eda7a-def5-0000-0000-000000000001",
	1,
	'/**
 *  Filter operation when choosing which interface signal can be used
 *  to formalize this asynchronous message
 */

// Check that we are not already formalized to the given interface
// signal
select one currentSignal related by self->MSG_SIG[R1019]->C_AS[R1021];
if(not_empty currentSignal and param.id == currentSignal.Id)
  return false;
end if;
return true;',
	1,
	'',
	"4f049908-4e0e-46fb-afac-dd0600b848ce",
	0);
INSERT INTO O_TPARM
	VALUES ("8733511b-abe2-4f0a-87e8-008e94dffb58",
	"feb71948-aec6-4b80-98fb-9790f9a89bf5",
	'id',
	"ba5eda7a-def5-0000-0000-000000000005",
	0,
	'',
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO O_TFR
	VALUES ("ee6cab98-b67e-4318-af38-912ab2bacaeb",
	"309b5a55-183e-493a-b341-9e38d953a6de",
	'pasteMessageArgument',
	'',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'select one message related by self->MSG_M[R1018];
message.pasteMessageArgument(id:param.id);',
	1,
	'',
	"feb71948-aec6-4b80-98fb-9790f9a89bf5",
	0);
INSERT INTO O_TPARM
	VALUES ("256fceeb-3e74-4e2c-afa3-4af7a761e3e7",
	"ee6cab98-b67e-4318-af38-912ab2bacaeb",
	'id',
	"ba5eda7a-def5-0000-0000-000000000005",
	0,
	'',
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO O_TFR
	VALUES ("75455d12-6aa4-4c99-8acf-b7a34a6b6d80",
	"309b5a55-183e-493a-b341-9e38d953a6de",
	'canCopyMessageArgument',
	'',
	"ba5eda7a-def5-0000-0000-000000000001",
	1,
	'select one message related by self->MSG_M[R1018];
return message.canCopyMessageArgument(id:param.id);',
	1,
	'',
	"ee6cab98-b67e-4318-af38-912ab2bacaeb",
	0);
INSERT INTO O_TPARM
	VALUES ("2714f3d3-46ac-4220-a240-41d55b5b7f7c",
	"75455d12-6aa4-4c99-8acf-b7a34a6b6d80",
	'id',
	"ba5eda7a-def5-0000-0000-000000000005",
	0,
	'',
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO O_TFR
	VALUES ("5736e100-af1c-4e44-898d-a965e90c91bf",
	"309b5a55-183e-493a-b341-9e38d953a6de",
	'canPasteMessageArgument',
	'',
	"ba5eda7a-def5-0000-0000-000000000001",
	1,
	'return not self.isFormal;',
	1,
	'',
	"75455d12-6aa4-4c99-8acf-b7a34a6b6d80",
	0);
INSERT INTO O_NBATTR
	VALUES ("b53c5305-df6a-495f-9c88-ed8a5d25a830",
	"309b5a55-183e-493a-b341-9e38d953a6de");
INSERT INTO O_BATTR
	VALUES ("b53c5305-df6a-495f-9c88-ed8a5d25a830",
	"309b5a55-183e-493a-b341-9e38d953a6de");
INSERT INTO O_ATTR
	VALUES ("b53c5305-df6a-495f-9c88-ed8a5d25a830",
	"309b5a55-183e-493a-b341-9e38d953a6de",
	"e811e41f-d664-4c6b-b5b7-495d76260661",
	'GuardCondition',
	'Full Name: Guard Condition',
	'',
	'GuardCondition',
	0,
	"ba5eda7a-def5-0000-0000-000000000004",
	'',
	'');
INSERT INTO O_NBATTR
	VALUES ("e811e41f-d664-4c6b-b5b7-495d76260661",
	"309b5a55-183e-493a-b341-9e38d953a6de");
INSERT INTO O_BATTR
	VALUES ("e811e41f-d664-4c6b-b5b7-495d76260661",
	"309b5a55-183e-493a-b341-9e38d953a6de");
INSERT INTO O_ATTR
	VALUES ("e811e41f-d664-4c6b-b5b7-495d76260661",
	"309b5a55-183e-493a-b341-9e38d953a6de",
	"6a46c144-ebb2-409c-a866-5b81b5affe30",
	'Descrip',
	'Full Name: Message Description',
	'',
	'Descrip',
	0,
	"ba5eda7a-def5-0000-0000-000000000004",
	'',
	'');
INSERT INTO O_DBATTR
	VALUES ("6c520a4a-91ae-4389-9b0c-c1ed7c94479f",
	"309b5a55-183e-493a-b341-9e38d953a6de",
	'select one iam related by self->MSG_IAM[R1019];
if(not_empty iam)
  self.isFormal = false;
else
  self.isFormal = true;
end if;',
	1,
	0);
INSERT INTO O_BATTR
	VALUES ("6c520a4a-91ae-4389-9b0c-c1ed7c94479f",
	"309b5a55-183e-493a-b341-9e38d953a6de");
INSERT INTO O_ATTR
	VALUES ("6c520a4a-91ae-4389-9b0c-c1ed7c94479f",
	"309b5a55-183e-493a-b341-9e38d953a6de",
	"6af7d602-98cf-49e0-bac9-7ca4656f8978",
	'isFormal',
	'Full Name: Is Formal',
	'',
	'isFormal',
	0,
	"ba5eda7a-def5-0000-0000-000000000001",
	'',
	'');
INSERT INTO O_NBATTR
	VALUES ("6af7d602-98cf-49e0-bac9-7ca4656f8978",
	"309b5a55-183e-493a-b341-9e38d953a6de");
INSERT INTO O_BATTR
	VALUES ("6af7d602-98cf-49e0-bac9-7ca4656f8978",
	"309b5a55-183e-493a-b341-9e38d953a6de");
INSERT INTO O_ATTR
	VALUES ("6af7d602-98cf-49e0-bac9-7ca4656f8978",
	"309b5a55-183e-493a-b341-9e38d953a6de",
	"f858d76c-c4b3-4a82-ac8f-109287460beb",
	'DurationConstraint',
	'Full Name: Duration Constraint',
	'',
	'DurationConstraint',
	0,
	"ba5eda7a-def5-0000-0000-000000000004",
	'',
	'');
INSERT INTO O_DBATTR
	VALUES ("060c3a07-9032-4eb1-b9c4-26c458ea853d",
	"309b5a55-183e-493a-b341-9e38d953a6de",
	'result = "";
select one em related by self->MSG_E[R1019];
select one sigMsg related by self->MSG_SIG[R1019];
if(not_empty em)
  select one evt related by em->SM_EVT[R1009];
  result = evt.Drv_Lbl + ": " + evt.Mning;
elif not_empty sigMsg
  select one signal related by sigMsg->C_AS[R1021];
  result = signal.Name;
else
  result = self.InformalName;
end if;
self.Label = result;',
	1,
	0);
INSERT INTO O_BATTR
	VALUES ("060c3a07-9032-4eb1-b9c4-26c458ea853d",
	"309b5a55-183e-493a-b341-9e38d953a6de");
INSERT INTO O_ATTR
	VALUES ("060c3a07-9032-4eb1-b9c4-26c458ea853d",
	"309b5a55-183e-493a-b341-9e38d953a6de",
	"6c520a4a-91ae-4389-9b0c-c1ed7c94479f",
	'Label',
	'User_Visible: false',
	'',
	'Label',
	0,
	"ba5eda7a-def5-0000-0000-000000000004",
	'',
	'');
INSERT INTO O_NBATTR
	VALUES ("f858d76c-c4b3-4a82-ac8f-109287460beb",
	"309b5a55-183e-493a-b341-9e38d953a6de");
INSERT INTO O_BATTR
	VALUES ("f858d76c-c4b3-4a82-ac8f-109287460beb",
	"309b5a55-183e-493a-b341-9e38d953a6de");
INSERT INTO O_ATTR
	VALUES ("f858d76c-c4b3-4a82-ac8f-109287460beb",
	"309b5a55-183e-493a-b341-9e38d953a6de",
	"b53c5305-df6a-495f-9c88-ed8a5d25a830",
	'DurationObservation',
	'Full Name: Duration Observation',
	'',
	'DurationObservation',
	0,
	"ba5eda7a-def5-0000-0000-000000000004",
	'',
	'');
INSERT INTO O_NBATTR
	VALUES ("6a46c144-ebb2-409c-a866-5b81b5affe30",
	"309b5a55-183e-493a-b341-9e38d953a6de");
INSERT INTO O_BATTR
	VALUES ("6a46c144-ebb2-409c-a866-5b81b5affe30",
	"309b5a55-183e-493a-b341-9e38d953a6de");
INSERT INTO O_ATTR
	VALUES ("6a46c144-ebb2-409c-a866-5b81b5affe30",
	"309b5a55-183e-493a-b341-9e38d953a6de",
	"cc2ec914-d5c6-48d8-bd9f-34b0a8025595",
	'InformalName',
	'Full Name: Informal Name',
	'',
	'InformalName',
	0,
	"ba5eda7a-def5-0000-0000-000000000004",
	'',
	'');
INSERT INTO O_NBATTR
	VALUES ("2e65d7a8-eabf-416a-87b9-26e5dc9bf46b",
	"309b5a55-183e-493a-b341-9e38d953a6de");
INSERT INTO O_BATTR
	VALUES ("2e65d7a8-eabf-416a-87b9-26e5dc9bf46b",
	"309b5a55-183e-493a-b341-9e38d953a6de");
INSERT INTO O_ATTR
	VALUES ("2e65d7a8-eabf-416a-87b9-26e5dc9bf46b",
	"309b5a55-183e-493a-b341-9e38d953a6de",
	"060c3a07-9032-4eb1-b9c4-26c458ea853d",
	'SequenceNumb',
	'Full Name: Sequence Number',
	'',
	'SequenceNumb',
	0,
	"ba5eda7a-def5-0000-0000-000000000004",
	'',
	'');
INSERT INTO O_REF
	VALUES ("309b5a55-183e-493a-b341-9e38d953a6de",
	"77d1cb23-9b16-462c-99a7-0df500aade81",
	0,
	"38f49fd7-1298-4072-add6-12f98b1f966d",
	"bfed9e9b-2dc9-4d52-aadc-4beffb2ff74e",
	"fa2fa4ef-3bce-46a2-8573-765405088dc0",
	"afdc29fe-e556-45cc-9169-35d69e841a80",
	"cc2ec914-d5c6-48d8-bd9f-34b0a8025595",
	"75f7b58b-7468-482c-8796-43b9b9f25ce3",
	"00000000-0000-0000-0000-000000000000",
	0,
	'',
	'Message',
	'Msg_ID',
	'R1018');
INSERT INTO R_RGO_PROXY
	VALUES ("309b5a55-183e-493a-b341-9e38d953a6de",
	"bfed9e9b-2dc9-4d52-aadc-4beffb2ff74e",
	"fa2fa4ef-3bce-46a2-8573-765405088dc0",
	'../Message.xtuml');
INSERT INTO O_RTIDA_PROXY
	VALUES ("38f49fd7-1298-4072-add6-12f98b1f966d",
	"77d1cb23-9b16-462c-99a7-0df500aade81",
	0,
	"bfed9e9b-2dc9-4d52-aadc-4beffb2ff74e",
	"afdc29fe-e556-45cc-9169-35d69e841a80",
	'../Message.xtuml');
INSERT INTO O_RATTR
	VALUES ("cc2ec914-d5c6-48d8-bd9f-34b0a8025595",
	"309b5a55-183e-493a-b341-9e38d953a6de",
	"5776264f-c7e9-4abe-839f-24d0750e007c",
	"5ada8d43-9e86-43cb-91a2-fac19a8e30f6",
	1,
	'Element_ID');
INSERT INTO O_BATTR_PROXY
	VALUES ("5776264f-c7e9-4abe-839f-24d0750e007c",
	"5ada8d43-9e86-43cb-91a2-fac19a8e30f6",
	'../../Packageable Element/Packageable Element/Packageable Element.xtuml');
INSERT INTO O_ATTR
	VALUES ("cc2ec914-d5c6-48d8-bd9f-34b0a8025595",
	"309b5a55-183e-493a-b341-9e38d953a6de",
	"00000000-0000-0000-0000-000000000000",
	'Msg_ID',
	'',
	'',
	'Msg_ID',
	0,
	"ba5eda7a-def5-0000-0000-000000000007",
	'',
	'');
INSERT INTO O_ID
	VALUES (0,
	"309b5a55-183e-493a-b341-9e38d953a6de");
INSERT INTO O_OIDA
	VALUES ("cc2ec914-d5c6-48d8-bd9f-34b0a8025595",
	"309b5a55-183e-493a-b341-9e38d953a6de",
	0,
	'Msg_ID');
INSERT INTO O_ID
	VALUES (1,
	"309b5a55-183e-493a-b341-9e38d953a6de");
INSERT INTO O_ID
	VALUES (2,
	"309b5a55-183e-493a-b341-9e38d953a6de");
INSERT INTO PE_PE
	VALUES ("309b5a55-183e-493a-b341-9e38d953a6de",
	1,
	"5b26fa8b-77b9-4af0-807d-28be1c9e1735",
	"00000000-0000-0000-0000-000000000000",
	4);
INSERT INTO EP_PKG_PROXY
	VALUES ("5b26fa8b-77b9-4af0-807d-28be1c9e1735",
	"00000000-0000-0000-0000-000000000000",
	"d9bc5487-4193-4817-be1c-6c3f3339aebf",
	'Message',
	'// This is used by schema_gen to ignore this subsystem (for publication)
TRANSLATE_FOR_EXTERNAL_USE:FALSE',
	1000,
	'../Message.xtuml');
