-- BP 7.1.6 content: ModelClass syschar: 3 persistence-version: 7.1.6

INSERT INTO O_OBJ
	VALUES ("89fa6f15-b93c-405a-821d-a7b066b3c937",
	'Select From Instances',
	612,
	'ACT_FIO',
	'This class represents a statement that selects a set of  instances from a class extent.',
	"00000000-0000-0000-0000-000000000000");
INSERT INTO O_TFR
	VALUES ("90610fa2-6fb3-4b5e-af1d-8b2216633362",
	"89fa6f15-b93c-405a-821d-a7b066b3c937",
	'dispose',
	'This operation disconnects an instance, and all instances it is 
responsible for, from the model.',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'select one obj related by self->O_OBJ[R677];
if ( not_empty obj )
  unrelate self from obj across R677;
end if;

select one var related by self->V_VAR[R639];
if ( not_empty var )
  unrelate self from var across R639;
  if ( not var.Declared )
    var.dispose();
  end if;
end if;
delete object instance self;

',
	1,
	'',
	"00000000-0000-0000-0000-000000000000",
	0);
INSERT INTO O_TFR
	VALUES ("7c82daff-6602-4e16-a925-813460efebd9",
	"89fa6f15-b93c-405a-821d-a7b066b3c937",
	'execute',
	'',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'// Select From Instances.execute()
select one body related by self->ACT_SMT[R603]->ACT_BLK[R602]->ACT_ACT[R601];
// Grab the stack frame
select any stack_frame from instances of I_STF where (selected.Stack_Frame_ID == param.stack_frame_id);
if (empty stack_frame)
  //Invalid stack frame ID!
  pathMsg = "<No Path Available - Empty instance>";
    if (not_empty body)
      pathMsg = body.getPath();
    end if;
	USER::logError(msg:"Error in Select From Instances.execute: Invalid stack frame id used. Using random top stack frame.",path:pathMsg);
  select any stack from instances of I_STACK;
  select one stack_frame related by stack->I_STF[R2929];
end if;
  
select one engine related by stack_frame->I_STACK[R2943]->I_EXE[R2930];
  
if (self.cardinality == "many")
  select many cies related by self->O_OBJ[R677]->CSME_CIE[R2961]
             where (selected.Execution_Engine_ID == engine.Execution_Engine_ID);
  select many insts related by cies->I_INS[R2962];
  select one inst_set related by self->V_VAR[R639]->V_INS[R814];

  if (self.is_implicit)
    // Create the selection result instance reference
    // in the scope of the enclosing block
    select one block related by self->ACT_SMT[R603]->ACT_BLK[R602];
    ref_ID = block.newLocalReference(stack_frame_id: param.stack_frame_id);
    select any local_ref related by block->I_BSF[R2923]->L_LCL[R3000]->L_LCR[R3001] where
                                                  (selected.Local_ID == ref_ID);
    relate inst_set to local_ref across R3003;
  end if;

  // Get the right local reference for this instance set in this block in stack frame

  // Set value to this block with the right type so we can use it later.  The value here is useless.
  select any local_ref from instances of L_LCR;

  // Get all of the block in stack frames that exist for the stack frame
  select many block_in_stack_frames related by stack_frame->I_BSF[R2923];
  for each block_in_stack_frame in block_in_stack_frames

    // Find the one local reference that matches the block in stack frame where we are executing for the transient variable we want to assign
    select any local_ref related by block_in_stack_frame->L_LCL[R3000]->L_LCR[R3001] where selected.Var_ID == inst_set.Var_ID;
    if (not_empty local_ref)
      // We found the 1 local reference in this stack frame for this instance handle id.  So stop looking.
      // All of this was necessary in order to support nested blocks that reference variables that were created in outer blocks in this stack frame
    
      // WARNING: This implementation is based on the Object Action Language definition that existed in November of 2005.
      //          If the language is changed to become a strongly typed language where a user can define a variable in an inner block with the same
      //          name as something that exists in the outer block, then this implementation will not work because it does not walk out of the current
      //          block.
      break;
    end if;
  end for;
    
  select many staleInsts related by inst_set->L_LCR[R3003]->L_LCL[R3001]->
        RV_RVL[R3306]->RV_SMV[R3300]->RV_IRV[R3308]->L_IIR[R3311]->I_INS[R3013];
  for each inst in staleInsts
    local_ref.purge(inst_id:inst.Inst_ID);
  end for;
  for each inst in insts
    local_ref.addInstance(inst_id:inst.Inst_ID);
  end for;
  
else  // Cardinality is either any or one

  select many cies related by self->O_OBJ[R677]->CSME_CIE[R2961]
             where (selected.Execution_Engine_ID == engine.Execution_Engine_ID);
  select any inst related by cies->I_INS[R2962];
  select one instHandle related by self->V_VAR[R639]->V_INT[R814];

  if (self.is_implicit)
    // Create the selection result instance reference
    // in the scope of the enclosing block
    select one block related by self->ACT_SMT[R603]->ACT_BLK[R602];
    ref_ID = block.newLocalReference(stack_frame_id: stack_frame.Stack_Frame_ID);
    select any local_ref related by block->I_BSF[R2923]->L_LCL[R3000]->
                               L_LCR[R3001] where (selected.Local_ID == ref_ID);
    relate instHandle to local_ref across R3004;
  end if;

  // Get the right local reference handle again because the relationship we
  // just made is now out of scope

  // Set value to this block with the right type so we can use it later.
  //  The value here is useless.
  select any local_ref from instances of L_LCR;

  // Get all of the block in stack frames that exist for the stack frame
  select many block_in_stack_frames related by stack_frame->I_BSF[R2923];
  for each block_in_stack_frame in block_in_stack_frames

    // Find the one local value that matches the block in stack frame where
    // we are executing for the transient variable we want to assign
    select any local_ref related by block_in_stack_frame->L_LCL[R3000]->
                        L_LCR[R3001] where selected.Var_ID == instHandle.Var_ID;
    if (not_empty local_ref)
      // We found the 1 local reference in this stack frame for this instance
      // handle id.  So stop looking.
      // All of this was necessary in order to support nested blocks that
      // reference variables that were created in outer blocks in this stack
      // frame
    
      // WARNING: This implementation is based on the Object Action Language
      // definition that existed in November of 2005.
      // If the language is changed to become a strongly typed language where
      // a user can define a variable in an inner block with the same
      // name as something that exists in the outer block, then this
      // implementation will not work because it does not walk out of the
      // current block.
      break;
    end if;
  end for;

  select many staleInsts related by instHandle->
         L_LCR[R3004]->L_LCL[R3001]->RV_RVL[R3306]->RV_SMV[R3300]->
                                      RV_IRV[R3308]->L_IIR[R3311]->I_INS[R3013];
  for each inst in staleInsts
    local_ref.purge(inst_id:inst.Inst_ID);
  end for;
  if (not_empty inst)
    local_ref.addInstance(inst_id:inst.Inst_ID);
  end if;
end if;',
	1,
	'',
	"90610fa2-6fb3-4b5e-af1d-8b2216633362",
	0);
INSERT INTO O_TPARM
	VALUES ("4c3984d3-7a21-498d-beaa-20b12d077cb0",
	"7c82daff-6602-4e16-a925-813460efebd9",
	'stack_frame_id',
	"ba5eda7a-def5-0000-0000-000000000005",
	0,
	'',
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO O_REF
	VALUES ("89fa6f15-b93c-405a-821d-a7b066b3c937",
	"e9011b75-e798-45a3-ac83-92ba7c04db4e",
	0,
	"57ac4fbc-42e9-46ec-a929-7875093e348c",
	"63067dfa-ea5b-4c48-bd8c-138b8b76196c",
	"0bcb7d45-1d2b-4454-81fe-240a9230a33f",
	"fe55fe0e-8913-466e-aa7c-a04d957a07ce",
	"0ffb4dec-5098-49f6-88d5-22c1c9a11613",
	"8476a9ff-9b5b-4506-ba3c-ae7325a3df01",
	"00000000-0000-0000-0000-000000000000",
	0,
	'',
	'Statement',
	'Statement_ID',
	'R603');
INSERT INTO R_RGO_PROXY
	VALUES ("89fa6f15-b93c-405a-821d-a7b066b3c937",
	"63067dfa-ea5b-4c48-bd8c-138b8b76196c",
	"0bcb7d45-1d2b-4454-81fe-240a9230a33f",
	'../../Body/Body.xtuml');
INSERT INTO O_RTIDA_PROXY
	VALUES ("57ac4fbc-42e9-46ec-a929-7875093e348c",
	"e9011b75-e798-45a3-ac83-92ba7c04db4e",
	0,
	"63067dfa-ea5b-4c48-bd8c-138b8b76196c",
	"fe55fe0e-8913-466e-aa7c-a04d957a07ce",
	'../../Body/Body.xtuml');
INSERT INTO O_RATTR
	VALUES ("0ffb4dec-5098-49f6-88d5-22c1c9a11613",
	"89fa6f15-b93c-405a-821d-a7b066b3c937",
	"57ac4fbc-42e9-46ec-a929-7875093e348c",
	"e9011b75-e798-45a3-ac83-92ba7c04db4e",
	1,
	'Statement_ID');
INSERT INTO O_BATTR_PROXY
	VALUES ("57ac4fbc-42e9-46ec-a929-7875093e348c",
	"e9011b75-e798-45a3-ac83-92ba7c04db4e",
	'../../Body/Statement/Statement.xtuml');
INSERT INTO O_ATTR
	VALUES ("0ffb4dec-5098-49f6-88d5-22c1c9a11613",
	"89fa6f15-b93c-405a-821d-a7b066b3c937",
	"00000000-0000-0000-0000-000000000000",
	'Statement_ID',
	'

',
	'',
	'Statement_ID',
	0,
	"ba5eda7a-def5-0000-0000-000000000007",
	'',
	'');
INSERT INTO O_REF
	VALUES ("89fa6f15-b93c-405a-821d-a7b066b3c937",
	"04ccf45f-92e0-4d09-ba38-c8b5e3c789c4",
	0,
	"aa0af814-2950-42d7-b263-1e32565f47ac",
	"4ecd0a0c-2e03-4257-9faf-3b791e52dd11",
	"57ab7b7f-7b6c-4ac1-b123-e8c66e99433d",
	"c27b8bd1-a65f-42e6-9ac3-e611372f1ac0",
	"d60e1190-2408-4ce3-bf93-33dc285d11ba",
	"52312ed9-cc6d-49e5-98b7-b4d496c8d59e",
	"00000000-0000-0000-0000-000000000000",
	0,
	'',
	'Variable',
	'Var_ID',
	'R639.''selection''');
INSERT INTO R_RGO_PROXY
	VALUES ("89fa6f15-b93c-405a-821d-a7b066b3c937",
	"4ecd0a0c-2e03-4257-9faf-3b791e52dd11",
	"57ab7b7f-7b6c-4ac1-b123-e8c66e99433d",
	'../Selection.xtuml');
INSERT INTO O_RTIDA_PROXY
	VALUES ("aa0af814-2950-42d7-b263-1e32565f47ac",
	"04ccf45f-92e0-4d09-ba38-c8b5e3c789c4",
	0,
	"4ecd0a0c-2e03-4257-9faf-3b791e52dd11",
	"c27b8bd1-a65f-42e6-9ac3-e611372f1ac0",
	'../Selection.xtuml');
INSERT INTO O_RATTR
	VALUES ("d60e1190-2408-4ce3-bf93-33dc285d11ba",
	"89fa6f15-b93c-405a-821d-a7b066b3c937",
	"aa0af814-2950-42d7-b263-1e32565f47ac",
	"04ccf45f-92e0-4d09-ba38-c8b5e3c789c4",
	1,
	'Var_ID');
INSERT INTO O_BATTR_PROXY
	VALUES ("aa0af814-2950-42d7-b263-1e32565f47ac",
	"04ccf45f-92e0-4d09-ba38-c8b5e3c789c4",
	'../../Value/Variable/Variable.xtuml');
INSERT INTO O_ATTR
	VALUES ("d60e1190-2408-4ce3-bf93-33dc285d11ba",
	"89fa6f15-b93c-405a-821d-a7b066b3c937",
	"0ffb4dec-5098-49f6-88d5-22c1c9a11613",
	'Var_ID',
	'

',
	'',
	'Var_ID',
	0,
	"ba5eda7a-def5-0000-0000-000000000007",
	'',
	'');
INSERT INTO O_NBATTR
	VALUES ("ef3c8ea4-0447-4395-bb7a-47d1138f8abd",
	"89fa6f15-b93c-405a-821d-a7b066b3c937");
INSERT INTO O_BATTR
	VALUES ("ef3c8ea4-0447-4395-bb7a-47d1138f8abd",
	"89fa6f15-b93c-405a-821d-a7b066b3c937");
INSERT INTO O_ATTR
	VALUES ("ef3c8ea4-0447-4395-bb7a-47d1138f8abd",
	"89fa6f15-b93c-405a-821d-a7b066b3c937",
	"d60e1190-2408-4ce3-bf93-33dc285d11ba",
	'is_implicit',
	'Full Name: Is Implicit
Specifies whether the resulting instance handle found is being used for the first time in this scope or not.',
	'',
	'is_implicit',
	0,
	"ba5eda7a-def5-0000-0000-000000000001",
	'',
	'');
INSERT INTO O_NBATTR
	VALUES ("2ff2dfce-192f-499d-91ff-6c643e54abb1",
	"89fa6f15-b93c-405a-821d-a7b066b3c937");
INSERT INTO O_BATTR
	VALUES ("2ff2dfce-192f-499d-91ff-6c643e54abb1",
	"89fa6f15-b93c-405a-821d-a7b066b3c937");
INSERT INTO O_ATTR
	VALUES ("2ff2dfce-192f-499d-91ff-6c643e54abb1",
	"89fa6f15-b93c-405a-821d-a7b066b3c937",
	"ef3c8ea4-0447-4395-bb7a-47d1138f8abd",
	'cardinality',
	'Full Name: Selection Cardinality
Specifies whether the selection produces a set or an instance as a result.    The cardinality value can be one of the following: one, any, or many.',
	'',
	'cardinality',
	0,
	"ba5eda7a-def5-0000-0000-000000000004",
	'',
	'');
INSERT INTO O_NBATTR
	VALUES ("ff5ac8e6-5f49-45d4-a9b8-93607ca1206e",
	"89fa6f15-b93c-405a-821d-a7b066b3c937");
INSERT INTO O_BATTR
	VALUES ("ff5ac8e6-5f49-45d4-a9b8-93607ca1206e",
	"89fa6f15-b93c-405a-821d-a7b066b3c937");
INSERT INTO O_ATTR
	VALUES ("ff5ac8e6-5f49-45d4-a9b8-93607ca1206e",
	"89fa6f15-b93c-405a-821d-a7b066b3c937",
	"511d52fc-5823-45d4-8cf5-4660ffe72227",
	'extentLineNumber',
	'',
	'',
	'extentLineNumber',
	0,
	"ba5eda7a-def5-0000-0000-000000000002",
	'',
	'');
INSERT INTO O_NBATTR
	VALUES ("5e6db34e-0d3c-4b94-ae5c-6e189e65b9c0",
	"89fa6f15-b93c-405a-821d-a7b066b3c937");
INSERT INTO O_BATTR
	VALUES ("5e6db34e-0d3c-4b94-ae5c-6e189e65b9c0",
	"89fa6f15-b93c-405a-821d-a7b066b3c937");
INSERT INTO O_ATTR
	VALUES ("5e6db34e-0d3c-4b94-ae5c-6e189e65b9c0",
	"89fa6f15-b93c-405a-821d-a7b066b3c937",
	"ff5ac8e6-5f49-45d4-a9b8-93607ca1206e",
	'extentColumn',
	'',
	'',
	'extentColumn',
	0,
	"ba5eda7a-def5-0000-0000-000000000002",
	'',
	'');
INSERT INTO O_REF
	VALUES ("89fa6f15-b93c-405a-821d-a7b066b3c937",
	"b7630071-9e2a-4183-9986-779dca14c275",
	0,
	"e55a865c-b4e5-4e3f-9b84-2e5672cc7e6c",
	"2f333d19-363a-43ab-b5c5-a06a8479c705",
	"d7e51643-b0da-4c35-bf53-e9e30af506ed",
	"3047da8b-9056-41bb-aaeb-a67f8869eefd",
	"511d52fc-5823-45d4-8cf5-4660ffe72227",
	"f637838c-d99e-47d9-9522-d970dec09fc1",
	"00000000-0000-0000-0000-000000000000",
	0,
	'',
	'Model Class',
	'Obj_ID',
	'R677.''from extent of''');
INSERT INTO R_RGO_PROXY
	VALUES ("89fa6f15-b93c-405a-821d-a7b066b3c937",
	"2f333d19-363a-43ab-b5c5-a06a8479c705",
	"d7e51643-b0da-4c35-bf53-e9e30af506ed",
	'../Selection.xtuml');
INSERT INTO O_RTIDA_PROXY
	VALUES ("e55a865c-b4e5-4e3f-9b84-2e5672cc7e6c",
	"b7630071-9e2a-4183-9986-779dca14c275",
	0,
	"2f333d19-363a-43ab-b5c5-a06a8479c705",
	"3047da8b-9056-41bb-aaeb-a67f8869eefd",
	'../Selection.xtuml');
INSERT INTO O_RATTR
	VALUES ("511d52fc-5823-45d4-8cf5-4660ffe72227",
	"89fa6f15-b93c-405a-821d-a7b066b3c937",
	"5776264f-c7e9-4abe-839f-24d0750e007c",
	"5ada8d43-9e86-43cb-91a2-fac19a8e30f6",
	1,
	'Element_ID');
INSERT INTO O_BATTR_PROXY
	VALUES ("5776264f-c7e9-4abe-839f-24d0750e007c",
	"5ada8d43-9e86-43cb-91a2-fac19a8e30f6",
	'../../Packageable Element/Packageable Element/Packageable Element.xtuml');
INSERT INTO O_ATTR
	VALUES ("511d52fc-5823-45d4-8cf5-4660ffe72227",
	"89fa6f15-b93c-405a-821d-a7b066b3c937",
	"2ff2dfce-192f-499d-91ff-6c643e54abb1",
	'Obj_ID',
	'',
	'',
	'Obj_ID',
	0,
	"ba5eda7a-def5-0000-0000-000000000007",
	'',
	'');
INSERT INTO O_ID
	VALUES (0,
	"89fa6f15-b93c-405a-821d-a7b066b3c937");
INSERT INTO O_OIDA
	VALUES ("0ffb4dec-5098-49f6-88d5-22c1c9a11613",
	"89fa6f15-b93c-405a-821d-a7b066b3c937",
	0,
	'Statement_ID');
INSERT INTO O_ID
	VALUES (1,
	"89fa6f15-b93c-405a-821d-a7b066b3c937");
INSERT INTO O_ID
	VALUES (2,
	"89fa6f15-b93c-405a-821d-a7b066b3c937");
INSERT INTO PE_PE
	VALUES ("89fa6f15-b93c-405a-821d-a7b066b3c937",
	1,
	"4baa0857-ca29-4e4a-b1cb-873757c0f936",
	"00000000-0000-0000-0000-000000000000",
	4);
INSERT INTO EP_PKG_PROXY
	VALUES ("4baa0857-ca29-4e4a-b1cb-873757c0f936",
	"00000000-0000-0000-0000-000000000000",
	"d9bc5487-4193-4817-be1c-6c3f3339aebf",
	'Selection',
	'This subsystem captures concepts related to selections of instances across associations. Association chain, where and instance extent selections are also covered.
Notify_Changes:false
Persistent:false
// This is used by schema_gen to ignore this subsystem (for publication)
TRANSLATE_FOR_EXTERNAL_USE:FALSE
',
	600,
	'../Selection.xtuml');
