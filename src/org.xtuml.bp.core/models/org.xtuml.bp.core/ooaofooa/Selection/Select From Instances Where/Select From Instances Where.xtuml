-- BP 7.1.6 content: ModelClass syschar: 3 persistence-version: 7.1.6

INSERT INTO O_OBJ
	VALUES ("d493c966-7083-429d-9e8e-552a145b89d5",
	'Select From Instances Where',
	611,
	'ACT_FIW',
	'This class represents a statement that selects a set of  instances from a class extent with the support of a where clause.  The where clause consists of a boolean expression containing the special instance handle ''selected''. If the expression evaluates to true, the instance represented by ''selected '' is added to the result set of the statement.
',
	"00000000-0000-0000-0000-000000000000");
INSERT INTO O_TFR
	VALUES ("c9a234d7-d97f-4e00-8fa3-aacb5653cef8",
	"d493c966-7083-429d-9e8e-552a145b89d5",
	'dispose',
	'This operation disconnects an instance, and all instances it is 
responsible for, from the model.',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'select one obj related by self->O_OBJ[R676];
if ( not_empty obj )
  unrelate self from obj across R676;
end if;

select one var related by self->V_VAR[R665];
if ( not_empty var )
  unrelate self from var across R665;
  if ( not var.Declared )
    var.dispose();
  end if;
end if;

select one val related by self->V_VAL[R610];
if ( not_empty val )
  unrelate self from val across R610;
  val.dispose();
end if;
delete object instance self;
',
	1,
	'',
	"00000000-0000-0000-0000-000000000000",
	0);
INSERT INTO O_TFR
	VALUES ("17cd7099-b8d8-4710-ae4a-49f61cd26e7d",
	"d493c966-7083-429d-9e8e-552a145b89d5",
	'execute',
	'',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'// (ACT_FIW) Select from Instances Where.execute()
// select any <handle> from instances of <key letters> where
//                                         selected.<attribute> == <expression>;
// We need to take advantage of the is_implicit attribute
//
// Grab the stack frame
select one body related by self->ACT_SMT[R603]->ACT_BLK[R602]->ACT_ACT[R601];
select any stack_frame from instances of I_STF where
                                selected.Stack_Frame_ID == param.stack_frame_id;
if (empty stack_frame)
  //Invalid stack frame ID!
  pathMsg = "<No Path Available - Empty instance>";
    if (not_empty body)
      pathMsg = body.getPath();
    end if;
	USER::logError(msg:"Error in Selection From Instances Where.execute: Invalid stack frame handle used. Using random top stack frame.",path:pathMsg);
  select any stack from instances of I_STACK;
  select one stack_frame related by stack->I_STF[R2929];
end if;

// get the current execution engine
select one engine related by stack_frame->I_STACK[R2943]->I_EXE[R2930];

select any sel_ref related by stack_frame->I_BSF[R2923]->
                                                     L_LCL[R3000]->L_LSR[R3001];
if (empty sel_ref)
  // If there isn''t one, create it and link it to the outer block
  select one outer_block related by self->ACT_SMT[R603]->ACT_BLK[R602]->
                                                   ACT_ACT[R601]->ACT_BLK[R666];
  ref_ID = outer_block.newLocalSelectedReference(stack_frame_id:
                                                    stack_frame.Stack_Frame_ID);
  select any sel_ref related by stack_frame->I_BSF[R2923]->
                 L_LCL[R3000]->L_LSR[R3001] where (selected.Local_ID == ref_ID);
end if;
// Get the right local reference for the instance reference target
// in this block in stack frame
// Set value to this block with the right type so we can use it later.
// The value here is useless.
select any local_ref from instances of L_LCR;
select one inst_ref related by sel_ref->L_IWC[R3006];
if (self.is_implicit and empty inst_ref)
  // This is the first use of this lefthand variable
  // _and_ we''ve not yet started iterating.
  // Create the selection result instance reference
  // in the scope of the enclosing block.
  select one block related by self->ACT_SMT[R603]->ACT_BLK[R602];
  ref_ID = block.newLocalReference(stack_frame_id: param.stack_frame_id);
  select any local_ref related by block->I_BSF[R2923]->L_LCL[R3000]->
                               L_LCR[R3001] where (selected.Local_ID == ref_ID);
  if (self.cardinality == "many")
    select one inst_set related by self->V_VAR[R665]->V_INS[R814];
    relate inst_set to local_ref across R3003;
  else
    select one inst_handle related by self->V_VAR[R665]->V_INT[R814];
    relate inst_handle to local_ref across R3004;
  end if;
else
  // Set up the target refererence variable
  target_var_ID = GD::NULL_UNIQUE_ID();
  if (self.cardinality == "many")
    select one inst_set related by self->V_VAR[R665]->V_INS[R814];
    target_var_ID = inst_set.Var_ID;
  else
    select one inst_handle related by self->V_VAR[R665]->V_INT[R814];
    target_var_ID = inst_handle.Var_ID;
  end if;
  // Get all of the block in stack frames that exist for the stack frame
  select many block_in_stack_frames related by stack_frame->I_BSF[R2923];
  for each block_in_stack_frame in block_in_stack_frames
    // Find the one local reference that matches the block in stack frame
    // where we are executing for the transient variable we want to assign
    select any local_ref related by block_in_stack_frame->L_LCL[R3000]->
                          L_LCR[R3001] where selected.Var_ID == target_var_ID;
    if (not_empty local_ref)
      // We found the 1 local reference in this stack frame for this instance
      // handle id.  So stop looking.
      // All of this was necessary in order to support nested blocks that
      // reference variables that were created in outer blocks in this stack
      // frame
      // WARNING: This implementation is based on the Object Action Language
      // definition that existed in November of 2005.
      // If the language is changed to become a strongly typed language where
      // a user can define a variable in an inner block with the same
      // name as something that exists in the outer block, then this
      // implementation will not work because it does not walk out of the
      // current block.
      break;
    end if;
  end for;
end if;
if (empty inst_ref)
  // We haven''t begun to iterate yet, clear stale
  // selections . . .
  select one inst_set related by self->V_VAR[R665]->V_INS[R814];
  select many staleInsts related by inst_set->L_LCR[R3003]->L_LCL[R3001]->
        RV_RVL[R3306]->RV_SMV[R3300]->RV_IRV[R3308]->L_IIR[R3311]->I_INS[R3013];
  if (empty inst_set)
    select one inst_handle related by self->V_VAR[R665]->V_INT[R814];
    select many staleInsts related by inst_handle->
                  L_LCR[R3004]->L_LCL[R3001]->RV_RVL[R3306]->
                       RV_SMV[R3300]->RV_IRV[R3308]->L_IIR[R3311]->I_INS[R3013];
  end if;
  for each inst in staleInsts
    local_ref.purge(inst_id:inst.Inst_ID);
  end for;
  // . . . and set up the instance extent for iteration
  sel_ref_initialized = false;
  select many cies related by self->O_OBJ[R676]->CSME_CIE[R2961]
             where (selected.Execution_Engine_ID == engine.Execution_Engine_ID);
  select many insts related by cies->I_INS[R2962];
  select any prev_inst_in_where from instances of L_IWC;
  for each inst in insts
    create object instance inst_in_where of L_IWC;
    relate inst to inst_in_where across R3014;
    if (sel_ref_initialized == false)
      // Point the selection reference to the first instance
      relate inst_in_where to sel_ref across R3006;
      inst_ref = inst_in_where;
      sel_ref_initialized = true;
    else
      // Chain the instances together
      relate inst_in_where to prev_inst_in_where across R3016.''is after'';
    end if;
    prev_inst_in_where = inst_in_where;
  end for;
end if;
if not_empty inst_ref
  select one where_clause related by self->V_VAL[R610];
  // The where_clause value contains the Boolean result of the expression 
  // written in the OAL statement
  // For each instance in the set, if the user supplied
  // where clause evaluates to TRUE, then add it to the set.
  where_clause.computeValue(stack_frame_id: stack_frame.Stack_Frame_ID);
  select any result related by stack_frame->I_VSF[R2951] where
                                     selected.Value_ID == where_clause.Value_ID;
  select one rtVal related by result->RV_RVL[R3305];
  if (empty rtVal)
    // result requires computation. Return and let the new stack frame execute
    return;      
  end if;
  stack_frame.popValue(value_id:where_clause.Value_ID);
  select one inst_in_where related by sel_ref->L_IWC[R3006];
  if (not_empty inst_in_where)
    select one inst related by inst_in_where->I_INS[R3014];
    selectionPassed = GD::instance_to_boolean(value:rtVal.getValue());
    if ( selectionPassed == TRUE )
      local_ref.addInstance(inst_id:inst.Inst_ID);
    end if;
    select one next_inst_in_where related by inst_in_where->
                                                       L_IWC[R3016.''is before''];
    unrelate inst_in_where from sel_ref across R3006;
    // We''ve visited this instance, dispose the reference
    inst_in_where.dispose();
    if (self.cardinality == "many" or not selectionPassed)
      if (not_empty next_inst_in_where)
        relate next_inst_in_where to sel_ref across R3006;
      end if;
    else
      // We got our result and we''re done, dispose all remaining references
      while (not_empty next_inst_in_where)
        select one next_next_inst_in_where related by inst_in_where->
                                                       L_IWC[R3016.''is before''];
        next_inst_in_where.dispose();
        next_inst_in_where = next_next_inst_in_where;
      end while;
    end if;
  end if;
end if;',
	1,
	'',
	"c9a234d7-d97f-4e00-8fa3-aacb5653cef8",
	0);
INSERT INTO O_TPARM
	VALUES ("50738cb2-8929-4894-8a43-dbe3c7f503e3",
	"17cd7099-b8d8-4710-ae4a-49f61cd26e7d",
	'stack_frame_id',
	"ba5eda7a-def5-0000-0000-000000000005",
	0,
	'',
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO O_REF
	VALUES ("d493c966-7083-429d-9e8e-552a145b89d5",
	"e9011b75-e798-45a3-ac83-92ba7c04db4e",
	0,
	"57ac4fbc-42e9-46ec-a929-7875093e348c",
	"63067dfa-ea5b-4c48-bd8c-138b8b76196c",
	"bece9074-7c81-4a16-aa7f-710cf79f98d8",
	"fe55fe0e-8913-466e-aa7c-a04d957a07ce",
	"0ef29877-e4ec-497f-9a36-af99c0866c8a",
	"8b705efd-f25b-439f-9ce4-0933d746102b",
	"00000000-0000-0000-0000-000000000000",
	0,
	'',
	'Statement',
	'Statement_ID',
	'R603');
INSERT INTO R_RGO_PROXY
	VALUES ("d493c966-7083-429d-9e8e-552a145b89d5",
	"63067dfa-ea5b-4c48-bd8c-138b8b76196c",
	"bece9074-7c81-4a16-aa7f-710cf79f98d8",
	'../../Body/Body.xtuml');
INSERT INTO O_RTIDA_PROXY
	VALUES ("57ac4fbc-42e9-46ec-a929-7875093e348c",
	"e9011b75-e798-45a3-ac83-92ba7c04db4e",
	0,
	"63067dfa-ea5b-4c48-bd8c-138b8b76196c",
	"fe55fe0e-8913-466e-aa7c-a04d957a07ce",
	'../../Body/Body.xtuml');
INSERT INTO O_RATTR
	VALUES ("0ef29877-e4ec-497f-9a36-af99c0866c8a",
	"d493c966-7083-429d-9e8e-552a145b89d5",
	"57ac4fbc-42e9-46ec-a929-7875093e348c",
	"e9011b75-e798-45a3-ac83-92ba7c04db4e",
	1,
	'Statement_ID');
INSERT INTO O_BATTR_PROXY
	VALUES ("57ac4fbc-42e9-46ec-a929-7875093e348c",
	"e9011b75-e798-45a3-ac83-92ba7c04db4e",
	'../../Body/Statement/Statement.xtuml');
INSERT INTO O_ATTR
	VALUES ("0ef29877-e4ec-497f-9a36-af99c0866c8a",
	"d493c966-7083-429d-9e8e-552a145b89d5",
	"00000000-0000-0000-0000-000000000000",
	'Statement_ID',
	'

',
	'',
	'Statement_ID',
	0,
	"ba5eda7a-def5-0000-0000-000000000007",
	'',
	'');
INSERT INTO O_REF
	VALUES ("d493c966-7083-429d-9e8e-552a145b89d5",
	"04ccf45f-92e0-4d09-ba38-c8b5e3c789c4",
	0,
	"aa0af814-2950-42d7-b263-1e32565f47ac",
	"8954348b-a8f5-4c70-8f49-9261d5be97f4",
	"85705c30-05d5-42e3-beaf-be408aa2e6b8",
	"a28473f4-b773-4737-a16c-c9e1fdaccd50",
	"1d8edbd3-1e9b-4ac4-b6d2-828e2aefed5b",
	"b337597c-ca6f-4147-ae78-b672b34375ed",
	"00000000-0000-0000-0000-000000000000",
	0,
	'',
	'Variable',
	'Var_ID',
	'R665.''result''');
INSERT INTO R_RGO_PROXY
	VALUES ("d493c966-7083-429d-9e8e-552a145b89d5",
	"8954348b-a8f5-4c70-8f49-9261d5be97f4",
	"85705c30-05d5-42e3-beaf-be408aa2e6b8",
	'../Selection.xtuml');
INSERT INTO O_RTIDA_PROXY
	VALUES ("aa0af814-2950-42d7-b263-1e32565f47ac",
	"04ccf45f-92e0-4d09-ba38-c8b5e3c789c4",
	0,
	"8954348b-a8f5-4c70-8f49-9261d5be97f4",
	"a28473f4-b773-4737-a16c-c9e1fdaccd50",
	'../Selection.xtuml');
INSERT INTO O_RATTR
	VALUES ("1d8edbd3-1e9b-4ac4-b6d2-828e2aefed5b",
	"d493c966-7083-429d-9e8e-552a145b89d5",
	"aa0af814-2950-42d7-b263-1e32565f47ac",
	"04ccf45f-92e0-4d09-ba38-c8b5e3c789c4",
	1,
	'Var_ID');
INSERT INTO O_BATTR_PROXY
	VALUES ("aa0af814-2950-42d7-b263-1e32565f47ac",
	"04ccf45f-92e0-4d09-ba38-c8b5e3c789c4",
	'../../Value/Variable/Variable.xtuml');
INSERT INTO O_ATTR
	VALUES ("1d8edbd3-1e9b-4ac4-b6d2-828e2aefed5b",
	"d493c966-7083-429d-9e8e-552a145b89d5",
	"0ef29877-e4ec-497f-9a36-af99c0866c8a",
	'Var_ID',
	'

',
	'',
	'Var_ID',
	0,
	"ba5eda7a-def5-0000-0000-000000000007",
	'',
	'');
INSERT INTO O_NBATTR
	VALUES ("cd918165-fc8b-4ba5-88a2-553c6d201021",
	"d493c966-7083-429d-9e8e-552a145b89d5");
INSERT INTO O_BATTR
	VALUES ("cd918165-fc8b-4ba5-88a2-553c6d201021",
	"d493c966-7083-429d-9e8e-552a145b89d5");
INSERT INTO O_ATTR
	VALUES ("cd918165-fc8b-4ba5-88a2-553c6d201021",
	"d493c966-7083-429d-9e8e-552a145b89d5",
	"1d8edbd3-1e9b-4ac4-b6d2-828e2aefed5b",
	'is_implicit',
	'Full Name: Is Implicit
Specifies whether the resulting instance handle found is being used for the first time in this scope or not.',
	'',
	'is_implicit',
	0,
	"ba5eda7a-def5-0000-0000-000000000001",
	'',
	'');
INSERT INTO O_NBATTR
	VALUES ("93bc991b-eecf-4f9c-b878-f3b11f3cacb1",
	"d493c966-7083-429d-9e8e-552a145b89d5");
INSERT INTO O_BATTR
	VALUES ("93bc991b-eecf-4f9c-b878-f3b11f3cacb1",
	"d493c966-7083-429d-9e8e-552a145b89d5");
INSERT INTO O_ATTR
	VALUES ("93bc991b-eecf-4f9c-b878-f3b11f3cacb1",
	"d493c966-7083-429d-9e8e-552a145b89d5",
	"cd918165-fc8b-4ba5-88a2-553c6d201021",
	'cardinality',
	'Full Name: Selection Cardinality
Specifies whether the selection produces a set or an instance as a result.    The cardinality value can be one of the following: one, any, or many. ',
	'',
	'cardinality',
	0,
	"ba5eda7a-def5-0000-0000-000000000004",
	'',
	'');
INSERT INTO O_REF
	VALUES ("d493c966-7083-429d-9e8e-552a145b89d5",
	"80366c8b-358d-4b86-a0fd-bd9d289c9cd2",
	0,
	"4fd005ad-1159-4343-a12e-ed125f7adea1",
	"7bf2cbb7-4de5-4adb-b74a-0b135848f69c",
	"4ecb5dc6-1bbe-4c02-be10-e66c54b6e59c",
	"944f0f69-1da9-459b-8f26-7b2a0e854c20",
	"d7580861-ac88-439c-a0c8-f06bd30e7443",
	"03b7bed3-2dea-4f7c-8bdc-76258c1e6552",
	"00000000-0000-0000-0000-000000000000",
	0,
	'',
	'Value',
	'Value_ID',
	'R610.''where clause''');
INSERT INTO R_RGO_PROXY
	VALUES ("d493c966-7083-429d-9e8e-552a145b89d5",
	"7bf2cbb7-4de5-4adb-b74a-0b135848f69c",
	"4ecb5dc6-1bbe-4c02-be10-e66c54b6e59c",
	'../Selection.xtuml');
INSERT INTO O_RTIDA_PROXY
	VALUES ("4fd005ad-1159-4343-a12e-ed125f7adea1",
	"80366c8b-358d-4b86-a0fd-bd9d289c9cd2",
	0,
	"7bf2cbb7-4de5-4adb-b74a-0b135848f69c",
	"944f0f69-1da9-459b-8f26-7b2a0e854c20",
	'../Selection.xtuml');
INSERT INTO O_RATTR
	VALUES ("d7580861-ac88-439c-a0c8-f06bd30e7443",
	"d493c966-7083-429d-9e8e-552a145b89d5",
	"4fd005ad-1159-4343-a12e-ed125f7adea1",
	"80366c8b-358d-4b86-a0fd-bd9d289c9cd2",
	1,
	'Value_ID');
INSERT INTO O_BATTR_PROXY
	VALUES ("4fd005ad-1159-4343-a12e-ed125f7adea1",
	"80366c8b-358d-4b86-a0fd-bd9d289c9cd2",
	'../../Value/Value/Value.xtuml');
INSERT INTO O_ATTR
	VALUES ("d7580861-ac88-439c-a0c8-f06bd30e7443",
	"d493c966-7083-429d-9e8e-552a145b89d5",
	"93bc991b-eecf-4f9c-b878-f3b11f3cacb1",
	'Where_Clause_Value_ID',
	'

',
	'Where_Clause_',
	'Value_ID',
	1,
	"ba5eda7a-def5-0000-0000-000000000007",
	'',
	'');
INSERT INTO O_NBATTR
	VALUES ("1a2d7f63-aa0c-476c-8492-ef73388052d3",
	"d493c966-7083-429d-9e8e-552a145b89d5");
INSERT INTO O_BATTR
	VALUES ("1a2d7f63-aa0c-476c-8492-ef73388052d3",
	"d493c966-7083-429d-9e8e-552a145b89d5");
INSERT INTO O_ATTR
	VALUES ("1a2d7f63-aa0c-476c-8492-ef73388052d3",
	"d493c966-7083-429d-9e8e-552a145b89d5",
	"addf8f17-20bd-41f5-a343-a5b6eb02b829",
	'extentLineNumber',
	'',
	'',
	'extentLineNumber',
	0,
	"ba5eda7a-def5-0000-0000-000000000002",
	'',
	'');
INSERT INTO O_NBATTR
	VALUES ("b7d55dba-d5a7-408b-8510-20c7848f6a49",
	"d493c966-7083-429d-9e8e-552a145b89d5");
INSERT INTO O_BATTR
	VALUES ("b7d55dba-d5a7-408b-8510-20c7848f6a49",
	"d493c966-7083-429d-9e8e-552a145b89d5");
INSERT INTO O_ATTR
	VALUES ("b7d55dba-d5a7-408b-8510-20c7848f6a49",
	"d493c966-7083-429d-9e8e-552a145b89d5",
	"1a2d7f63-aa0c-476c-8492-ef73388052d3",
	'extentColumn',
	'',
	'',
	'extentColumn',
	0,
	"ba5eda7a-def5-0000-0000-000000000002",
	'',
	'');
INSERT INTO O_REF
	VALUES ("d493c966-7083-429d-9e8e-552a145b89d5",
	"b7630071-9e2a-4183-9986-779dca14c275",
	0,
	"e55a865c-b4e5-4e3f-9b84-2e5672cc7e6c",
	"2626ecb4-b0df-4c7f-880e-4554a37a1382",
	"6b2b1fb8-6006-40e6-901f-641284306981",
	"1028d7da-3b58-417f-96a1-af38bbee8e13",
	"addf8f17-20bd-41f5-a343-a5b6eb02b829",
	"b3714ba7-fbb8-4dce-ae25-0842ca3f1c3e",
	"00000000-0000-0000-0000-000000000000",
	0,
	'',
	'Model Class',
	'Obj_ID',
	'R676.''from extent of''');
INSERT INTO R_RGO_PROXY
	VALUES ("d493c966-7083-429d-9e8e-552a145b89d5",
	"2626ecb4-b0df-4c7f-880e-4554a37a1382",
	"6b2b1fb8-6006-40e6-901f-641284306981",
	'../Selection.xtuml');
INSERT INTO O_RTIDA_PROXY
	VALUES ("e55a865c-b4e5-4e3f-9b84-2e5672cc7e6c",
	"b7630071-9e2a-4183-9986-779dca14c275",
	0,
	"2626ecb4-b0df-4c7f-880e-4554a37a1382",
	"1028d7da-3b58-417f-96a1-af38bbee8e13",
	'../Selection.xtuml');
INSERT INTO O_RATTR
	VALUES ("addf8f17-20bd-41f5-a343-a5b6eb02b829",
	"d493c966-7083-429d-9e8e-552a145b89d5",
	"5776264f-c7e9-4abe-839f-24d0750e007c",
	"5ada8d43-9e86-43cb-91a2-fac19a8e30f6",
	1,
	'Element_ID');
INSERT INTO O_BATTR_PROXY
	VALUES ("5776264f-c7e9-4abe-839f-24d0750e007c",
	"5ada8d43-9e86-43cb-91a2-fac19a8e30f6",
	'../../Packageable Element/Packageable Element/Packageable Element.xtuml');
INSERT INTO O_ATTR
	VALUES ("addf8f17-20bd-41f5-a343-a5b6eb02b829",
	"d493c966-7083-429d-9e8e-552a145b89d5",
	"d7580861-ac88-439c-a0c8-f06bd30e7443",
	'Obj_ID',
	'',
	'',
	'Obj_ID',
	0,
	"ba5eda7a-def5-0000-0000-000000000007",
	'',
	'');
INSERT INTO O_ID
	VALUES (0,
	"d493c966-7083-429d-9e8e-552a145b89d5");
INSERT INTO O_OIDA
	VALUES ("0ef29877-e4ec-497f-9a36-af99c0866c8a",
	"d493c966-7083-429d-9e8e-552a145b89d5",
	0,
	'Statement_ID');
INSERT INTO O_ID
	VALUES (1,
	"d493c966-7083-429d-9e8e-552a145b89d5");
INSERT INTO O_ID
	VALUES (2,
	"d493c966-7083-429d-9e8e-552a145b89d5");
INSERT INTO PE_PE
	VALUES ("d493c966-7083-429d-9e8e-552a145b89d5",
	1,
	"4baa0857-ca29-4e4a-b1cb-873757c0f936",
	"00000000-0000-0000-0000-000000000000",
	4);
INSERT INTO EP_PKG_PROXY
	VALUES ("4baa0857-ca29-4e4a-b1cb-873757c0f936",
	"00000000-0000-0000-0000-000000000000",
	"d9bc5487-4193-4817-be1c-6c3f3339aebf",
	'Selection',
	'This subsystem captures concepts related to selections of instances across associations. Association chain, where and instance extent selections are also covered.
Notify_Changes:false
Persistent:false
// This is used by schema_gen to ignore this subsystem (for publication)
TRANSLATE_FOR_EXTERNAL_USE:FALSE
',
	600,
	'../Selection.xtuml');
