-- BP 7.1.6 content: ModelClass syschar: 3 persistence-version: 7.1.6

INSERT INTO O_OBJ
	VALUES ("2e044ba2-e455-4a61-bf36-6f8a383ad315",
	'Operation Value',
	808,
	'V_TRV',
	'This class represents the value returned by an operation invocation.
--------------------------------------------------------------------------------
Bridge:ALS',
	"00000000-0000-0000-0000-000000000000");
INSERT INTO O_TFR
	VALUES ("48150e97-6b0b-4dd3-9b54-ca7abe9ce474",
	"2e044ba2-e455-4a61-bf36-6f8a383ad315",
	'dispose',
	'This operation disconnects an instance, and all instances it is 
responsible for, from the model.',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'select one tfr related by self->O_TFR[R829];
if ( not_empty tfr )
  unrelate self from tfr across R829;
end if;

select one var related by self->V_VAR[R830];
if ( not_empty var )
  unrelate self from var across R830;
end if;

select many parm_set related by self->V_PAR[R811];
for each parm in parm_set 
  unrelate self from parm across R811;
  parm.dispose();
end for;
delete object instance self;
',
	1,
	'',
	"00000000-0000-0000-0000-000000000000",
	0);
INSERT INTO O_TFR
	VALUES ("9c8f0957-912a-427b-a380-787c42abd88f",
	"2e044ba2-e455-4a61-bf36-6f8a383ad315",
	'getValue',
	'',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'// (V_TRV) Value:Operation Value.getValue()

// Execute the function
select one body related by self->O_TFR[R829]->ACT_OPB[R696]->ACT_ACT[R698];
select any statement related by body->ACT_BLK[R666]->ACT_SMT[R602];
if (not_empty statement)
  // Setup the parameter values within the newly created stack frame
  discard = self.setupParameterValues(stack_frame_id: param.stack_frame_id);  

else
  select one op related by self->O_TFR[R829];
  select one clazz related by op->O_OBJ[R115];
  	pathMsg = "<No Path Available - Empty instance>";
	if (not_empty body)
	  pathMsg = body.getPath();
	end if;
	USER::logError(msg:"Error executing Operation: " +
						clazz.Name + "::" + op.Name +
						  ". No operation OAL found, returning default value.",path:pathMsg);
  select one dt related by op->S_DT[R116];
  select any stack_frame from instances of I_STF where
                                selected.Stack_Frame_ID == param.stack_frame_id; 
  if empty stack_frame
    pathMsg = "<No Path Available - Empty instance>";
    if (not_empty body)
      pathMsg = body.getPath();
    end if;
	USER::logError(msg:"Internal error in Operation Invocation.execute: " +
                                                  "Could not get stack frame.",path:pathMsg);
  else
    select one stack related by stack_frame->I_STACK[R2943]; 
    select any result related by stack_frame->I_VSF[R2951] where
                                             selected.Value_ID == self.Value_ID;
    // Return the default result
    select one rtVal related by result->RV_RVL[R3305];
    rtVal.setValue(value:dt.getDefaultValue());
  end if;
end if;',
	1,
	'',
	"48150e97-6b0b-4dd3-9b54-ca7abe9ce474",
	0);
INSERT INTO O_TPARM
	VALUES ("fac2f7e6-8aee-4b23-b5be-cd77ecef092f",
	"9c8f0957-912a-427b-a380-787c42abd88f",
	'stack_frame_id',
	"ba5eda7a-def5-0000-0000-000000000005",
	0,
	'',
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO O_TFR
	VALUES ("8bf45242-0317-4b07-9f13-66619abfbaf2",
	"2e044ba2-e455-4a61-bf36-6f8a383ad315",
	'setupParameterValues',
	'Create a new local value for each parameter within the stack frame of the operation we are going to execute.',
	"ba5eda7a-def5-0000-0000-000000000001",
	1,
	'// Invocation:Operation Value.setupParameterValues()
select one body related by self->V_VAL[R801]->ACT_BLK[R826]->ACT_ACT[R601];
select one operation related by self->O_TFR[R829];
select many operation_parameters related by operation->O_TPARM[R117];
select many args related by self->V_PAR[R811];
// Grab the stack frame(should be the new top stack frame)
select any stack_frame from instances of I_STF where
                                selected.Stack_Frame_ID == param.stack_frame_id;
if empty stack_frame
  //Invalid stack frame ID!
  pathMsg = "<No Path Available - Empty instance>";
    if (not_empty body)
      pathMsg = body.getPath();
    end if;
	USER::logError(msg:"Error in Operation Value.setupParameterValues: " +
                  "Invalid stack frame id used. Using random top stack frame.",path:pathMsg);
  select any stack from instances of I_STACK;
  select one stack_frame related by stack->I_STF[R2929];
end if;
// Grab the stack as well
select one stack related by stack_frame->I_STACK[R2929];
if empty stack
  //Invalid stack frame ID!
  pathMsg = "<No Path Available - Empty instance>";
    if (not_empty body)
      pathMsg = body.getPath();
    end if;
	USER::logError(msg:"Error in Operation Value.setupParameterValues: " +
                               "Failure to retieve stack. Using random stack.",path:pathMsg);
  select any stack from instances of I_STACK;
  select one new_stack_frame related by stack->I_STF[R2929];
end if;
select one outer_block related by operation->ACT_OPB[R696]->
                                                   ACT_ACT[R698]->ACT_BLK[R666];
if not_empty outer_block
  for each actual_parameter in args
    // Seach for a operation parameter with same name as the actual parameter
    select any operation_param related by operation->O_TPARM[R117] where
                                         selected.Name == actual_parameter.Name;
    if (empty operation_param)
      pathMsg = "<No Path Available - Empty instance>";
    if (not_empty body)
      pathMsg = body.getPath();
    end if;
	USER::logError(msg:"Error in Operation Value.setupParameterValues: " +
                            "did not find a corresponding operation parameter",path:pathMsg);
    else
      // We have found the matching operation parameter and actual parameter
      // Now set the value of the parameter value related to the operation
      // parameter to the actual parameter''s value
      if (operation_param.By_Ref == 0)  // by value
        select one act_val related by actual_parameter->V_VAL[R800];
        act_val.computeValue(stack_frame_id: stack_frame.Stack_Frame_ID);
        select any result related by stack_frame->I_VSF[R2951] where
                                          selected.Value_ID == act_val.Value_ID;
        select one rtVal related by result->RV_RVL[R3305];
        if (empty rtVal)
          // result requires computation.
          return false;
        end if;
      end if;
    end if;
  end for;
  // If we get here, all computation of arguments was completed,
  //  prepare for execution of the bridge
  select one body related by operation->ACT_OPB[R696]->ACT_ACT[R698];
  sf = body.createStackFrame(stack_id:stack.Stack_ID,
                 invoking_stack_frame_or_component_id: GD::NULL_UNIQUE_ID(),
                                                                enqueue: false);
  select any new_stack_frame from instances of I_STF where
                                                  selected.Stack_Frame_ID == sf;
  // Create a self operator if needed
  select many self_ih_vars related by outer_block->V_VAR[R823] where
                                     GD::toLower(value:selected.Name) == "self";
  if (not_empty self_ih_vars)
    // The self operator is used in the executing block,
    // so find it and relate it to the newly created local
    // Create a local reference for the self operator
    select one target_var related by self->V_VAR[R830];
    if (not_empty target_var)
      // The operation must be instance based, find the local instance . . . .
      select any target_local related by target_var->V_INT[R814]->
                                        L_LCR[R3004]->L_LCL[R3001] where
                          selected.Stack_Frame_ID == stack_frame.Stack_Frame_ID;
      select any target_inst related by target_local->L_LCR[R3001]->
                                            L_LCL[R3001]->RV_RVL[R3306]->
                       RV_SMV[R3300]->RV_IRV[R3308]->L_IIR[R3311]->I_INS[R3013];
      for each self_ih_var in self_ih_vars
        // Create a new local reference
        loc_id = outer_block.newLocalReference(stack_frame_id: sf);
        select any local_ref related by outer_block->I_BSF[R2923]->
                   L_LCL[R3000]->L_LCR[R3001] where selected.Local_ID == loc_id;
        if (not_empty target_inst)
          local_ref.addInstance(inst_id:target_inst.Inst_ID);
        end if;
        // Now relate the local reference to the ''self'' instance handle
        select one self_ih related by self_ih_var->V_INT[R814];
        relate self_ih to local_ref across R3004;
      end for;
      relate new_stack_frame to target_inst across R2954;
    else
      pathMsg = "<No Path Available - Empty instance>";
    if (not_empty body)
      pathMsg = body.getPath();
    end if;
	USER::logError(msg:"Error in Operation Value.setupParameterValues: " +
                                      "Could not find a target self variable.",path:pathMsg);
    end if;
  end if;
  for each arg in args
    select any operation_param related by operation->O_TPARM[R117] where
                                         selected.Name == arg.Name;
    // Create a new local value in the new stack frame for each argument
    loc_id = outer_block.newLocalValue(stack_frame_id: sf);
    // Find the new local value and set it with the actual parameter value
    select any local related by outer_block->I_BSF[R2923]->
                                 L_LCL[R3000] where selected.Local_ID == loc_id;
    select one lvl related by local->L_LVL[R3001];
    select one act_val related by arg->V_VAL[R800];
    if not_empty operation_param and operation_param.By_Ref == 0
      select any result related by stack_frame->I_VSF[R2951] where
                                          selected.Value_ID == act_val.Value_ID;
      select one rtVal related by result->RV_RVL[R3305];
      create object instance lrtVal of RV_RVL;
      relate lrtVal to local across R3306;
      select one dt related by operation_param->S_DT[R118];
      relate lrtVal to dt across R3307;
      lrtVal.copyValue(from:rtVal.RuntimeValue_ID);
    else  // assuming by ref
      relate lvl to act_val across R3010;
    end if;
    // Relate the new local value to the operation parameter so that
    // it can be found when the parameter value is referenced.
    relate operation_param to local across R3008;
    stack_frame.popValue(value_id:arg.Value_ID);
  end for;
else
  pathMsg = "<No Path Available - Empty instance>";
    if (not_empty body)
      pathMsg = body.getPath();
    end if;
	USER::logError(msg:"Error in Operation Value.setupParameterValues: " +
                                       "did not find an outer operation block",path:pathMsg);
end if;
return true;',
	1,
	'',
	"9c8f0957-912a-427b-a380-787c42abd88f",
	0);
INSERT INTO O_TPARM
	VALUES ("d7b90423-84f1-49a0-a458-a527976be340",
	"8bf45242-0317-4b07-9f13-66619abfbaf2",
	'stack_frame_id',
	"ba5eda7a-def5-0000-0000-000000000005",
	0,
	'',
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO O_REF
	VALUES ("2e044ba2-e455-4a61-bf36-6f8a383ad315",
	"80366c8b-358d-4b86-a0fd-bd9d289c9cd2",
	0,
	"4fd005ad-1159-4343-a12e-ed125f7adea1",
	"f45cba3b-f381-475e-b8a9-3b355142054d",
	"d86bcbcc-813d-4507-8330-8090667ab15b",
	"0a07b8be-4053-4dc6-a060-df5a70cbbed5",
	"e6cce1a4-867b-4ff4-b224-b87ef09e7b25",
	"c417890a-3b38-4a74-9426-37db53dbdf16",
	"00000000-0000-0000-0000-000000000000",
	0,
	'',
	'Value',
	'Value_ID',
	'R801');
INSERT INTO R_RGO_PROXY
	VALUES ("2e044ba2-e455-4a61-bf36-6f8a383ad315",
	"f45cba3b-f381-475e-b8a9-3b355142054d",
	"d86bcbcc-813d-4507-8330-8090667ab15b",
	'../Value.xtuml');
INSERT INTO O_RTIDA_PROXY
	VALUES ("4fd005ad-1159-4343-a12e-ed125f7adea1",
	"80366c8b-358d-4b86-a0fd-bd9d289c9cd2",
	0,
	"f45cba3b-f381-475e-b8a9-3b355142054d",
	"0a07b8be-4053-4dc6-a060-df5a70cbbed5",
	'../Value.xtuml');
INSERT INTO O_RATTR
	VALUES ("e6cce1a4-867b-4ff4-b224-b87ef09e7b25",
	"2e044ba2-e455-4a61-bf36-6f8a383ad315",
	"4fd005ad-1159-4343-a12e-ed125f7adea1",
	"80366c8b-358d-4b86-a0fd-bd9d289c9cd2",
	1,
	'Value_ID');
INSERT INTO O_BATTR_PROXY
	VALUES ("4fd005ad-1159-4343-a12e-ed125f7adea1",
	"80366c8b-358d-4b86-a0fd-bd9d289c9cd2",
	'../Value/Value.xtuml');
INSERT INTO O_ATTR
	VALUES ("e6cce1a4-867b-4ff4-b224-b87ef09e7b25",
	"2e044ba2-e455-4a61-bf36-6f8a383ad315",
	"00000000-0000-0000-0000-000000000000",
	'Value_ID',
	'',
	'',
	'Value_ID',
	0,
	"ba5eda7a-def5-0000-0000-000000000007",
	'',
	'');
INSERT INTO O_REF
	VALUES ("2e044ba2-e455-4a61-bf36-6f8a383ad315",
	"32854b2d-b225-40d9-abb2-4519ff4e4af7",
	0,
	"fedd7310-e864-45bb-abf6-b4c4e4a09551",
	"7c91111e-208b-43b5-9f42-849bd076f12c",
	"fa7d2712-2447-47e0-9fc4-7c00a5967656",
	"630a27a5-90c6-4a2c-9131-a8f02c8291f5",
	"95be7ded-1509-49ad-bea7-7e550c2ce72b",
	"337a3d52-5fe1-4387-96c6-3937af593063",
	"00000000-0000-0000-0000-000000000000",
	0,
	'',
	'Operation',
	'Tfr_ID',
	'R829');
INSERT INTO R_RGO_PROXY
	VALUES ("2e044ba2-e455-4a61-bf36-6f8a383ad315",
	"7c91111e-208b-43b5-9f42-849bd076f12c",
	"fa7d2712-2447-47e0-9fc4-7c00a5967656",
	'../Value.xtuml');
INSERT INTO O_RTIDA_PROXY
	VALUES ("fedd7310-e864-45bb-abf6-b4c4e4a09551",
	"32854b2d-b225-40d9-abb2-4519ff4e4af7",
	0,
	"7c91111e-208b-43b5-9f42-849bd076f12c",
	"630a27a5-90c6-4a2c-9131-a8f02c8291f5",
	'../Value.xtuml');
INSERT INTO O_RATTR
	VALUES ("95be7ded-1509-49ad-bea7-7e550c2ce72b",
	"2e044ba2-e455-4a61-bf36-6f8a383ad315",
	"fedd7310-e864-45bb-abf6-b4c4e4a09551",
	"32854b2d-b225-40d9-abb2-4519ff4e4af7",
	1,
	'Tfr_ID');
INSERT INTO O_BATTR_PROXY
	VALUES ("fedd7310-e864-45bb-abf6-b4c4e4a09551",
	"32854b2d-b225-40d9-abb2-4519ff4e4af7",
	'../../Subsystem/Operation/Operation.xtuml');
INSERT INTO O_ATTR
	VALUES ("95be7ded-1509-49ad-bea7-7e550c2ce72b",
	"2e044ba2-e455-4a61-bf36-6f8a383ad315",
	"e6cce1a4-867b-4ff4-b224-b87ef09e7b25",
	'Tfr_ID',
	'
',
	'',
	'Tfr_ID',
	0,
	"ba5eda7a-def5-0000-0000-000000000007",
	'',
	'');
INSERT INTO O_REF
	VALUES ("2e044ba2-e455-4a61-bf36-6f8a383ad315",
	"04ccf45f-92e0-4d09-ba38-c8b5e3c789c4",
	0,
	"aa0af814-2950-42d7-b263-1e32565f47ac",
	"1c7e545e-2982-43cc-9db7-c1a96eca06dc",
	"e7cf5bcf-d754-4ac6-940e-261b06bdd886",
	"50ff8b55-858e-4f49-a3d1-587650d256d9",
	"03b95c0a-33f1-433d-8862-24634a07dc92",
	"1acdce17-98f2-4a01-a66b-4cf5227b97f7",
	"00000000-0000-0000-0000-000000000000",
	0,
	'',
	'Variable',
	'Var_ID',
	'R830');
INSERT INTO R_RGO_PROXY
	VALUES ("2e044ba2-e455-4a61-bf36-6f8a383ad315",
	"1c7e545e-2982-43cc-9db7-c1a96eca06dc",
	"e7cf5bcf-d754-4ac6-940e-261b06bdd886",
	'../Value.xtuml');
INSERT INTO O_RTIDA_PROXY
	VALUES ("aa0af814-2950-42d7-b263-1e32565f47ac",
	"04ccf45f-92e0-4d09-ba38-c8b5e3c789c4",
	0,
	"1c7e545e-2982-43cc-9db7-c1a96eca06dc",
	"50ff8b55-858e-4f49-a3d1-587650d256d9",
	'../Value.xtuml');
INSERT INTO O_RATTR
	VALUES ("03b95c0a-33f1-433d-8862-24634a07dc92",
	"2e044ba2-e455-4a61-bf36-6f8a383ad315",
	"aa0af814-2950-42d7-b263-1e32565f47ac",
	"04ccf45f-92e0-4d09-ba38-c8b5e3c789c4",
	1,
	'Var_ID');
INSERT INTO O_BATTR_PROXY
	VALUES ("aa0af814-2950-42d7-b263-1e32565f47ac",
	"04ccf45f-92e0-4d09-ba38-c8b5e3c789c4",
	'../Variable/Variable.xtuml');
INSERT INTO O_ATTR
	VALUES ("03b95c0a-33f1-433d-8862-24634a07dc92",
	"2e044ba2-e455-4a61-bf36-6f8a383ad315",
	"95be7ded-1509-49ad-bea7-7e550c2ce72b",
	'Var_ID',
	'

',
	'',
	'Var_ID',
	0,
	"ba5eda7a-def5-0000-0000-000000000007",
	'',
	'');
INSERT INTO O_NBATTR
	VALUES ("3ce8e61c-e829-4c91-a1de-15dc4c99d511",
	"2e044ba2-e455-4a61-bf36-6f8a383ad315");
INSERT INTO O_BATTR
	VALUES ("3ce8e61c-e829-4c91-a1de-15dc4c99d511",
	"2e044ba2-e455-4a61-bf36-6f8a383ad315");
INSERT INTO O_ATTR
	VALUES ("3ce8e61c-e829-4c91-a1de-15dc4c99d511",
	"2e044ba2-e455-4a61-bf36-6f8a383ad315",
	"03b95c0a-33f1-433d-8862-24634a07dc92",
	'ParmListOK',
	'This attribute is true if there were no errors in parsing the operation invocation''s parameter list.
---------------------------------------------------------------------
Bridge:ALS',
	'',
	'ParmListOK',
	0,
	"ba5eda7a-def5-0000-0000-000000000001",
	'',
	'');
INSERT INTO O_NBATTR
	VALUES ("17db2504-c313-43aa-a223-9d3920a42975",
	"2e044ba2-e455-4a61-bf36-6f8a383ad315");
INSERT INTO O_BATTR
	VALUES ("17db2504-c313-43aa-a223-9d3920a42975",
	"2e044ba2-e455-4a61-bf36-6f8a383ad315");
INSERT INTO O_ATTR
	VALUES ("17db2504-c313-43aa-a223-9d3920a42975",
	"2e044ba2-e455-4a61-bf36-6f8a383ad315",
	"3ce8e61c-e829-4c91-a1de-15dc4c99d511",
	'modelClassKeyLettersLineNumber',
	'',
	'',
	'modelClassKeyLettersLineNumber',
	0,
	"ba5eda7a-def5-0000-0000-000000000002",
	'',
	'');
INSERT INTO O_NBATTR
	VALUES ("62552f0d-4279-48dc-86e7-7b61daab0d4b",
	"2e044ba2-e455-4a61-bf36-6f8a383ad315");
INSERT INTO O_BATTR
	VALUES ("62552f0d-4279-48dc-86e7-7b61daab0d4b",
	"2e044ba2-e455-4a61-bf36-6f8a383ad315");
INSERT INTO O_ATTR
	VALUES ("62552f0d-4279-48dc-86e7-7b61daab0d4b",
	"2e044ba2-e455-4a61-bf36-6f8a383ad315",
	"17db2504-c313-43aa-a223-9d3920a42975",
	'modelClassKeyLettersColumn',
	'',
	'',
	'modelClassKeyLettersColumn',
	0,
	"ba5eda7a-def5-0000-0000-000000000002",
	'',
	'');
INSERT INTO O_ID
	VALUES (0,
	"2e044ba2-e455-4a61-bf36-6f8a383ad315");
INSERT INTO O_OIDA
	VALUES ("e6cce1a4-867b-4ff4-b224-b87ef09e7b25",
	"2e044ba2-e455-4a61-bf36-6f8a383ad315",
	0,
	'Value_ID');
INSERT INTO O_ID
	VALUES (1,
	"2e044ba2-e455-4a61-bf36-6f8a383ad315");
INSERT INTO O_ID
	VALUES (2,
	"2e044ba2-e455-4a61-bf36-6f8a383ad315");
INSERT INTO PE_PE
	VALUES ("2e044ba2-e455-4a61-bf36-6f8a383ad315",
	1,
	"e060f94c-3f82-463e-9d98-d20315b7c196",
	"00000000-0000-0000-0000-000000000000",
	4);
INSERT INTO EP_PKG_PROXY
	VALUES ("e060f94c-3f82-463e-9d98-d20315b7c196",
	"00000000-0000-0000-0000-000000000000",
	"d9bc5487-4193-4817-be1c-6c3f3339aebf",
	'Value',
	'This subsystem formalizes the concepts of values (r-values) and variables 
(l-values). It also captures the concept of an actual parameter.
Notify_Changes:false
Persistent:false
// This is used by schema_gen to ignore this subsystem (for publication)
TRANSLATE_FOR_EXTERNAL_USE:FALSE
',
	800,
	'../Value.xtuml');
