<html>

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=Generator content="Microsoft Word 14 (filtered)">
<title>Translation - Overview</title>
<style>
<!--
 /* Font Definitions */
 @font-face
	{font-family:SimSun;
	panose-1:2 1 6 0 3 1 1 1 1 1;}
@font-face
	{font-family:SimSun;
	panose-1:2 1 6 0 3 1 1 1 1 1;}
@font-face
	{font-family:Tahoma;
	panose-1:2 11 6 4 3 5 4 4 2 4;}
@font-face
	{font-family:Webdings;
	panose-1:5 3 1 2 1 5 9 6 7 3;}
@font-face
	{font-family:"\@SimSun";
	panose-1:2 1 6 0 3 1 1 1 1 1;}
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{margin:0in;
	margin-bottom:.0001pt;
	font-size:12.0pt;
	font-family:"Times New Roman","serif";}
h1
	{mso-style-link:"Heading 1 Char";
	margin-right:0in;
	margin-left:0in;
	font-size:18.0pt;
	font-family:"Arial","sans-serif";
	color:black;
	font-weight:normal;}
h2
	{mso-style-link:"Heading 2 Char";
	margin-right:0in;
	margin-left:0in;
	line-height:15.6pt;
	font-size:12.0pt;
	font-family:"Arial","sans-serif";
	color:navy;
	font-weight:bold;}
h3
	{mso-style-link:"Heading 3 Char";
	margin-right:0in;
	margin-bottom:2.4pt;
	margin-left:0in;
	font-size:11.0pt;
	font-family:"Arial","sans-serif";
	color:navy;
	font-weight:bold;}
h4
	{mso-style-link:"Heading 4 Char";
	margin-top:7.5pt;
	margin-right:7.5pt;
	margin-bottom:2.4pt;
	margin-left:7.5pt;
	font-size:11.0pt;
	font-family:"Arial","sans-serif";
	color:#0176B9;
	font-weight:bold;}
a:link, span.MsoHyperlink
	{color:navy;
	text-decoration:underline;}
a:visited, span.MsoHyperlinkFollowed
	{color:#0176B9;
	text-decoration:underline;}
p
	{margin:7.5pt;
	font-size:10.0pt;
	font-family:"Times New Roman","serif";}
p.MsoAcetate, li.MsoAcetate, div.MsoAcetate
	{mso-style-link:"Balloon Text Char";
	margin:0in;
	margin-bottom:.0001pt;
	font-size:8.0pt;
	font-family:"Tahoma","sans-serif";}
span.Heading1Char
	{mso-style-name:"Heading 1 Char";
	mso-style-link:"Heading 1";
	font-family:"Cambria","serif";
	color:#365F91;
	font-weight:bold;}
span.Heading2Char
	{mso-style-name:"Heading 2 Char";
	mso-style-link:"Heading 2";
	font-family:"Cambria","serif";
	color:#4F81BD;
	font-weight:bold;}
span.Heading3Char
	{mso-style-name:"Heading 3 Char";
	mso-style-link:"Heading 3";
	font-family:"Cambria","serif";
	color:#4F81BD;
	font-weight:bold;}
span.Heading4Char
	{mso-style-name:"Heading 4 Char";
	mso-style-link:"Heading 4";
	font-family:"Cambria","serif";
	color:#4F81BD;
	font-weight:bold;
	font-style:italic;}
p.preformatted-tpcode, li.preformatted-tpcode, div.preformatted-tpcode
	{mso-style-name:preformatted-tp_code;
	margin-top:15.0pt;
	margin-right:0in;
	margin-bottom:15.0pt;
	margin-left:0in;
	background:silver;
	border:none;
	padding:0in;
	font-size:10.0pt;
	font-family:"Courier New";}
p.normalnotoc, li.normalnotoc, div.normalnotoc
	{mso-style-name:normalnotoc;
	margin:7.5pt;
	font-size:11.0pt;
	font-family:"Times New Roman","serif";}
span.codeChar
	{mso-style-name:"code Char";
	mso-style-link:code;
	font-family:"Courier New";}
p.code, li.code, div.code
	{mso-style-name:code;
	mso-style-link:"code Char";
	margin:7.5pt;
	font-size:11.0pt;
	font-family:"Courier New";}
p.tpcode, li.tpcode, div.tpcode
	{mso-style-name:tp_code;
	margin:7.5pt;
	font-size:10.0pt;
	font-family:"Courier New";}
p.tpinput, li.tpinput, div.tpinput
	{mso-style-name:tp_input;
	margin:7.5pt;
	font-size:10.0pt;
	font-family:"Times New Roman","serif";
	font-weight:bold;}
p.tpui, li.tpui, div.tpui
	{mso-style-name:tp_ui;
	margin:7.5pt;
	font-size:10.0pt;
	font-family:"Times New Roman","serif";
	color:navy;}
p.tpvar, li.tpvar, div.tpvar
	{mso-style-name:tp_var;
	margin:7.5pt;
	font-size:10.0pt;
	font-family:"Times New Roman","serif";
	font-style:italic;}
p.tpfooter, li.tpfooter, div.tpfooter
	{mso-style-name:tp_footer;
	margin:7.5pt;
	text-align:center;
	background:white;
	font-size:9.0pt;
	font-family:"Times New Roman","serif";}
p.sub, li.sub, div.sub
	{mso-style-name:sub;
	margin:7.5pt;
	font-size:10.0pt;
	font-family:"Times New Roman","serif";}
p.sublstbody, li.sublstbody, div.sublstbody
	{mso-style-name:sublstbody;
	margin:7.5pt;
	font-size:10.0pt;
	font-family:"Times New Roman","serif";}
span.tpfile
	{mso-style-name:tp_file;
	color:#990000;
	letter-spacing:1.2pt;}
span.tpnote
	{mso-style-name:tp_note;
	font-weight:bold;}
span.tpmenuarrow
	{mso-style-name:tp_menuarrow;
	font-family:Webdings;
	color:navy;}
span.hypertext
	{mso-style-name:hypertext;}
span.BalloonTextChar
	{mso-style-name:"Balloon Text Char";
	mso-style-link:"Balloon Text";
	font-family:"Tahoma","sans-serif";}
.MsoChpDefault
	{font-size:10.0pt;}
@page WordSection1
	{size:8.5in 11.0in;
	margin:1.0in 1.25in 1.0in 1.25in;}
div.WordSection1
	{page:WordSection1;}
 /* List Definitions */
 ol
	{margin-bottom:0in;}
ul
	{margin-bottom:0in;}
-->
</style>

</head>

<body bgcolor=white lang=EN-US link=navy vlink="#0176B9">

<div class=WordSection1>

<h1>Overview</h1>

<p style='line-height:15.6pt'><span style='font-family:"Arial","sans-serif"'>Translation
is the process by which xtUML application models are turned into code - C, C++,
Java, or any other language for which you have written translation rules. Off
the shelf model compilers, such as MC-3020, make use of </span><span
style='font-family:"Arial","sans-serif"'>BridgePoint</span><span
style='font-family:"Arial","sans-serif"'>’s translation features to pro­duce
complete applications in optimized ANSI C.</span></p>

<p style='line-height:15.6pt'><span style='font-family:"Arial","sans-serif"'>There
are two types of translation available to you. The first is translation via a
model com­piler. The second is by using the fundamental translation features
provided with BridgePoint.</span></p>

<h2>Definitions</h2>

<h3>Model</h3>

<p style='line-height:15.6pt'><span style='font-family:"Arial","sans-serif"'>A
model is a group of model elements organized in some fashion according to a
defined struc­ture (a metamodel). For the purposes of BridgePoint, a model is
an xtUML model created in BridgePoint Builder.</span></p>

<h3>Metamodel </h3>

<p style='line-height:15.6pt'><span style='font-family:"Arial","sans-serif"'>A
metamodel describes the structure of a model. For an xtUML model, the structure
is defined by the xtUML metamodel. Metamodels themselves are modeled using
xtUML.</span></p>

<h3>Database</h3>

<p style='line-height:15.6pt'><span style='font-family:"Arial","sans-serif"'>The
database, or translation database, is used to store the model data during
translation. When translating with a model compiler, the database is called an
xtUML database. Its structure is defined by the xtUML metamodel, and it’s data
is defined by what was entered in BridgePoint Builder.</span></p>

<p style='line-height:15.6pt'><span style='font-family:"Arial","sans-serif"'>The
words database, translation database, and xtUML database, are sometimes used
inter­changeably.</span></p>

<h3>Translation Rules</h3>

<p style='line-height:15.6pt'><span style='font-family:"Arial","sans-serif"'>Translation
rules are the means by which model data stored in the database are accessed,
for­matted, and output to files. Translation rules are written in RSL (Rule
Specification Lan­guage).</span></p>

<h2>Translating with a Model Compiler</h2>

<p style='line-height:15.6pt'><span style='font-family:"Arial","sans-serif"'>This
is the most common way to translate. To translate your application models into
code using a model compiler, all you have to do is: </span></p>

<p style='margin-left:43.5pt;text-indent:-.25in;line-height:15.6pt'><span
style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='font-family:"Arial","sans-serif"'>bring up
BridgePoint Builder</span></p>

<p style='margin-left:43.5pt;text-indent:-.25in;line-height:15.6pt'><span
style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='font-family:"Arial","sans-serif"'>create an xtUML
model </span></p>

<p style='margin-left:43.5pt;text-indent:-.25in;line-height:15.6pt'><span
style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='font-family:"Arial","sans-serif"'>configure the
model compiler using markings</span></p>

<p style='margin-left:43.5pt;text-indent:-.25in;line-height:15.6pt'><span
style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='font-family:"Arial","sans-serif"'>press the build
button</span></p>

<p style='line-height:15.6pt'><span style='font-family:"Arial","sans-serif"'>The
result of the build is a host executable or target image, ready for execution
and debug.</span></p>

<p style='line-height:15.6pt'><span style='font-family:"Arial","sans-serif"'>An
example of the translation process, using the MC-3020 C model compiler to
produce an executable, is shown in the figure below:</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:13.0pt;
margin-left:23.75pt;text-align:justify;text-autospace:none'><b><i><span
style='font-size:11.0pt'><img width=496 height=372 id="Picture 1"
src="Overview_files/image001.gif"></span></i></b></p>

<p class=MsoNormal style='text-align:justify;text-autospace:none'><b><i><span
style='font-size:11.0pt'>&nbsp;</span></i></b></p>

<p style='line-height:15.6pt'><span style='font-family:"Arial","sans-serif"'>The
xtUML application model is created in BridgePoint Builder. Markings are
supplied to the model compiler and the build button is pressed to initiate the
build. The xtUML application and any marking data are stored in an xtUML
database as input to the model compiler. The model compiler, driven by the
markings and the translation rules, gathers data from the xtUML database,
transforms it into the specified implementation, and produces an execut­able.</span></p>

<p style='line-height:15.6pt'><span style='font-family:"Arial","sans-serif"'>The
model compiler user interface consists of an editor used to specify the marking
data, and a few toolbar buttons used to build the executable. Typical markings
include specifying opti­mizations and choosing whether or not to produce an
executable for the Model Debugger. </span></p>

<p style='line-height:15.6pt'><span style='font-family:"Arial","sans-serif"'>Please
consult your BridgePoint Compiler’s User’s Guide and the Getting Started
section of the online documentation for complete details.</span></p>

<h2>Translation Outside of a Model Compiler</h2>

<p style='line-height:15.6pt'><span style='font-family:"Arial","sans-serif"'>The
model compilers encapsulate </span><span style='font-family:"Arial","sans-serif"'>BridgePoint</span><span
style='font-family:"Arial","sans-serif"'>’s translation features in order to
make the translation process as streamlined and easy to use as possible. The
fundamental translation process used by the model compilers, however, is very
simple. The process consists of the fol­lowing:</span></p>

<p style='margin-left:43.5pt;text-indent:-.25in;line-height:15.6pt'><span
style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='font-family:"Arial","sans-serif"'>creating a
database with the structure of the desired metamodel (we supply the xtUML
metamodel, but you can define any metamodel you like)</span></p>

<p style='margin-left:43.5pt;text-indent:-.25in;line-height:15.6pt'><span
style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='font-family:"Arial","sans-serif"'>importing an xtUML
model created with BridgePoint Builder into the database </span></p>

<p style='margin-left:43.5pt;text-indent:-.25in;line-height:15.6pt'><span
style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='font-family:"Arial","sans-serif"'>applying a set of
translation rules written in RSL (</span><span style='font-family:"Arial","sans-serif"'>BridgePoint</span><span
style='font-family:"Arial","sans-serif"'>’s Rule Specification Language)
against the database</span></p>

<p style='line-height:15.6pt'><span style='font-family:"Arial","sans-serif"'>That
is all you need, at the most fundamental level, to produce C, C++, HTML, Java,
text (lit­erally anything), from an xtUML model. Here is what the process looks
like graphically:</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:13.0pt;
margin-left:23.75pt;text-align:justify;text-autospace:none'><b><i><span
style='font-size:11.0pt'><img width=544 height=407 id="Picture 2"
src="Overview_files/image002.gif"></span></i></b></p>

<p class=MsoNormal style='text-align:justify;text-autospace:none'><b><i><span
style='font-size:11.0pt'>&nbsp;</span></i></b></p>

<p style='line-height:15.6pt'><span style='font-family:"Arial","sans-serif"'>The
first step in the translation process is to define the structure of the
database. This is accomplished by importing into the database, a file that
defines the structure of any to-be-imported model data. </span></p>

<p style='line-height:15.6pt'><span style='font-family:"Arial","sans-serif"'>When
a model compiler performs the first step, it defines the structure as the xtUML
meta­model that ships with the </span><span style='font-family:"Arial","sans-serif"'>BridgePoint</span><span
style='font-family:"Arial","sans-serif"'> tools.</span></p>

<p style='line-height:15.6pt'><span style='font-family:"Arial","sans-serif"'>The
second step is to import into the database a file containing model data - data
that adheres to the structure defined in the previous step. This can be data
output from BridgePoint Builder, cre­ated by hand, or created by translation
rules.</span></p>

<p style='line-height:15.6pt'><span style='font-family:"Arial","sans-serif"'>When
performing the second step, a model compiler imports the model data produced by
BridgePoint Builder. Data saved from </span><span style='font-family:"Arial","sans-serif"'>BridgePoint
Builder is guaranteed to match the xtUML metamodel that ships with the </span><span
style='font-family:"Arial","sans-serif"'>BridgePoint</span><span
style='font-family:"Arial","sans-serif"'> tools.</span></p>

<p style='line-height:15.6pt'><span style='font-family:"Arial","sans-serif"'>In
the third step, one or more translation rule files are applied to the database,
which at this point, contains the structure and data from the model. Each of
the translation rule files are written in RSL (Rule Specification Language).
RSL statements can be used to gather data from the database, transform it, and
emit it to one or more output files.</span></p>

<p style='line-height:15.6pt'><span style='font-family:"Arial","sans-serif"'>When
performing the third step, a model compiler applies all of the translation rule
files that encompass the system architecture. The result is a set of files that
are compiled and linked into an executable, or target image.</span></p>

<p style='line-height:15.6pt'><span style='font-family:"Arial","sans-serif"'>The
tools that comprise </span><span style='font-family:"Arial","sans-serif"'>BridgePoint</span><span
style='font-family:"Arial","sans-serif"'>’s fundamental translation features
provide a generic translation solution whereby text can be created using any
arbitrary model, the struc­ture of which is defined by any arbitrary metamodel.</span></p>

</div>

</body>

</html>
