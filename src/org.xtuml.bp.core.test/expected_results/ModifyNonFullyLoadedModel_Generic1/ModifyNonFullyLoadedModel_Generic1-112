drawRectangle(...)
drawText("+Model", ...)
drawText("{1,GD_MD}", ...)
drawline(...)
drawText("diagramId:unique_id", ...)
drawText("{I,R18}", ...)
drawText("Model_Type:ModelType", ...)
drawText("{R9}", ...)
drawText("OOA_ID:unique_id", ...)
drawText("OOA_Type:OOAType", ...)
drawText("{R9}", ...)
drawText("UseGlobalPrint:boolean", ...)
drawText("PrintMode:boolean", ...)
drawText("PrintRows:integer", ...)
drawText("PrintCols:integer", ...)
drawText("IsLandscape:boolean", ...)
drawText("ZoomFontSize:integer", ...)
drawText("GridOn:boolean", ...)
drawText("SelRectX:integer", ...)
drawText("SelRectY:integer", ...)
drawText("SelRectW:integer", ...)
drawText("SelRectH:integer", ...)
drawText("represents:instance", ...)
drawText("current_state:state<State_Model>", ...)
drawline(...)
drawText("activateSelectionTool():void", ...)
drawText("disableTextMove():void", ...)
drawText("dispose():void", ...)
drawText("draw(context:GCDelegate, is_hard_copy:boolean):void", ...)
drawText("elementChanged(clientElem:instance):void", ...)
drawText("elementCreated(elem:instance, type:class):void", ...)
drawText("elementDeleted(elem:instance):void", ...)
drawText("enableTextMoveUnder(x:integer, y:integer):void", ...)
drawText("getMaxX(all:boolean):integer", ...)
drawText("getMaxY(all:boolean):integer", ...)
drawText("getMinX(all:boolean):integer", ...)
drawText("getMinY(all:boolean):integer", ...)
drawText("getRepresents(x:integer, y:integer):instance", ...)
drawText("getScrollToolID():unique_id", ...)
drawText("getSelectionToolID():unique_id", ...)
drawText("getToolIdByName(toolname:string):unique_id", ...)
drawText("getToolTipText(x:integer, y:integer):string", ...)
drawText("initialize(elem:instance):void", ...)
drawText("initializeTools():void", ...)
drawText("unSelectAll():void", ...)
drawText("zoomTo(all:boolean, avH:integer, avW:integer, selection:boolean, toH:integer, toW:integer, toX:integer, toY:integer):void", ...)
drawRectangle(...)
drawText("+Graphical Element", ...)
drawText("{2,GD_GE}", ...)
drawline(...)
drawText("elementId:unique_id", ...)
drawText("{I,R23}", ...)
drawText("diagramId:unique_id", ...)
drawText("{R1}", ...)
drawText("OOA_ID:unique_id", ...)
drawText("OOA_Type:OOAType", ...)
drawText("{R10}", ...)
drawText("represents:instance", ...)
drawline(...)
drawText("dispose():void", ...)
drawText("draw(context:GCDelegate, disable_selection:boolean):void", ...)
drawText("getEndUnder(x:integer, y:integer):End", ...)
drawText("getLayer():integer", ...)
drawText("getVertexUnder(x:integer, y:integer):Vertex", ...)
drawText("isInside(h:integer, w:integer, x:integer, y:integer):boolean", ...)
drawText("isOver(x:integer, y:integer):boolean", ...)
drawText("isOverNWSE(x:integer, y:integer):boolean", ...)
drawText("isOverVertex(x:integer, y:integer):boolean", ...)
drawText("isSelected():boolean", ...)
drawText("move(xDelta:integer, yDelta:integer):void", ...)
drawText("moveVertex(End:End, Vertex:Vertex, xDelta:integer, yDelta:integer):void", ...)
drawText("toggleSelect():void", ...)
drawRectangle(...)
drawText("+Shape", ...)
drawText("{3,GD_SHP}", ...)
drawline(...)
drawText("elementId:unique_id", ...)
drawText("{I,R2}", ...)
drawline(...)
drawText("dispose():void", ...)
drawText("draw(context:GCDelegate, disable_selection:boolean):void", ...)
drawText("getIconSlotNumOver(x:integer, y:integer):integer", ...)
drawText("getIntersect(axis:Axis, x1:integer, x2:integer, y1:integer, y2:integer):integer", ...)
drawText("getNearestGridSnapPointOnEdge(x:real, y:real):unique_id", ...)
drawText("getRepresents(x:integer, y:integer):instance", ...)
drawText("getToolTipText(x:integer, y:integer):string", ...)
drawText("getXIntersect(x1:integer, x2:integer, y1:integer, y2:integer):integer", ...)
drawText("getYIntersect(x1:integer, x2:integer, y1:integer, y2:integer):integer", ...)
drawText("isInside(h:integer, w:integer, x:integer, y:integer):boolean", ...)
drawText("isOver(x:integer, y:integer):boolean", ...)
drawText("isOverDiagramPosition(x:integer, y:integer):boolean", ...)
drawText("isOverNE(x:integer, y:integer):boolean", ...)
drawText("isOverNW(x:integer, y:integer):boolean", ...)
drawText("isOverSE(x:integer, y:integer):boolean", ...)
drawText("isOverSW(x:integer, y:integer):boolean", ...)
drawText("isOverVertex(x:integer, y:integer):boolean", ...)
drawText("move(xDelta:integer, yDelta:integer):void", ...)
drawText("moveConnectors(Vertex:Vertex, oldShapeHeight:integer, oldShapeWidth:integer, oldShapeX:integer, oldShapeY:integer, xDelta:integer, yDelta:integer):void", ...)
drawText("moveToDefaultPosition():void", ...)
drawText("moveVertex(End:End, Vertex:Vertex, xDelta:integer, yDelta:integer):void", ...)
drawRectangle(...)
drawText("+Connector", ...)
drawText("{4,GD_CON}", ...)
drawline(...)
drawText("elementId:unique_id", ...)
drawText("{I,R2,R20}", ...)
drawText("Assoc_elementId:unique_id", ...)
drawText("{R5c}", ...)
drawline(...)
drawText("cropTo(attachingSegmentId:unique_id, createdAnchorId:unique_id, end:End):void", ...)
drawText("dispose():void", ...)
drawText("draw(context:GCDelegate, disable_selection:boolean):void", ...)
drawText("drawFixedText(at:End, context:GCDelegate, text:string, x1:integer, x2:integer, y1:integer, y2:integer):void", ...)
drawText("drawText(at:End, context:GCDelegate, disable_selection:boolean, text:string, x1:integer, x2:integer, y1:integer, y2:integer):void", ...)
drawText("endsOnWS():boolean", ...)
drawText("getDeltaForCropTo(deltaX:integer, deltaY:integer, end:End, oldShapeHeight:integer, oldShapeWidth:integer, oldShapeX:integer, oldShapeY:integer, vertex:Vertex):unique_id", ...)
drawText("getEndUnder(x:integer, y:integer):End", ...)
drawText("getEndX():integer", ...)
drawText("getEndY():integer", ...)
drawText("getEndingSegmentId():unique_id", ...)
drawText("getIntersect(axis:Axis, testInfinite:boolean, x1:integer, x2:integer, y1:integer, y2:integer):integer", ...)
drawText("getIntersectSegmentId(x:real, y:real):unique_id", ...)
drawText("getStartX():integer", ...)
drawText("getStartY():integer", ...)
drawText("getStartingSegmentId():unique_id", ...)
drawText("getVertexUnder(x:integer, y:integer):Vertex", ...)
drawText("getWidth():integer", ...)
drawText("initializeEndWaypointInMove(at:End):void", ...)
drawText("isEndSelected():boolean", ...)
drawText("isInside(h:integer, w:integer, x:integer, y:integer):boolean", ...)
drawText("isOver(x:integer, y:integer):boolean", ...)
drawText("isOverEnd(x:integer, y:integer):boolean", ...)
drawText("isOverVertex(x:integer, y:integer):boolean", ...)
drawText("isStartSelected():boolean", ...)
drawText("move(x:integer, y:integer):void", ...)
drawText("moveEnd(snapToGrid:boolean, xDelta:integer, yDelta:integer):void", ...)
drawText("moveStart(snapToGrid:boolean, xDelta:integer, yDelta:integer):void", ...)
drawText("moveVertex(End:End, Vertex:Vertex, xDelta:integer, yDelta:integer):void", ...)
drawText("reverseSense():void", ...)
drawText("startsOnWS():boolean", ...)
drawRectangle(...)
drawText("+Line Segment", ...)
drawText("{5,GD_LS}", ...)
drawline(...)
drawText("elementId:unique_id", ...)
drawText("{I}", ...)
drawText("conn_elementId:unique_id", ...)
drawText("{R6}", ...)
drawText("Previous_elementId:unique_id", ...)
drawText("{R7}", ...)
drawText("start_Way_ID:unique_id", ...)
drawText("{R21}", ...)
drawText("end_Way_ID:unique_id", ...)
drawText("{R22}", ...)
drawline(...)
drawText("dispose():void", ...)
drawText("getIntersect(axis:Axis, testInfinite:boolean, x1:integer, x2:integer, y1:integer, y2:integer):integer", ...)
drawText("intersectsWith(x1:integer, x2:integer, y1:integer, y2:integer):boolean", ...)
drawText("isMiddleSegment():boolean", ...)
drawText("isOver(scrollX:integer, scrollY:integer, x:integer, y:integer):boolean", ...)
drawText("isOverEnd(x:integer, y:integer):boolean", ...)
drawText("isOverStart(x:integer, y:integer):boolean", ...)
drawText("isOverVertex(x:integer, y:integer):boolean", ...)
drawText("isSelected():boolean", ...)
drawText("move(snapToGrid:boolean, xDelta:integer, yDelta:integer):void", ...)
drawText("moveEnd(snapToGrid:boolean, xDelta:integer, yDelta:integer):void", ...)
drawText("moveMiddleText(xDelta:integer, yDelta:integer):void", ...)
drawText("moveStart(snapToGrid:boolean, xDelta:integer, yDelta:integer):void", ...)
drawText("updateEnd(x:integer, y:integer):void", ...)
drawRectangle(...)
drawText("+Floating Text", ...)
drawText("{6,GD_CTXT}", ...)
drawline(...)
drawText("elementId:unique_id", ...)
drawText("{I}", ...)
drawText("conn_elementId:unique_id", ...)
drawText("{R8,R27}", ...)
drawText("end:End", ...)
drawText("deltaX:real", ...)
drawText("deltaY:real", ...)
drawline(...)
drawText("createSupertypeInstances():void", ...)
drawText("dispose():void", ...)
drawText("drawText(at:End, context:GCDelegate, disable_selection:boolean, text:string, x1:integer, x2:integer, y1:integer, y2:integer):void", ...)
drawText("isOver(scaled_x:integer, scaled_y:integer):boolean", ...)
drawText("isOverVertex(scaled_x:integer, scaled_y:integer):Vertex", ...)
drawText("move(xDelta:real, yDelta:real):void", ...)
drawText("moveVertex(Vertex:Vertex, viewportX:integer, viewportY:integer):void", ...)
drawText("resizeToText(text:string):void", ...)
drawRectangle(...)
drawText("+Model Specification", ...)
drawText("{7,GD_MS}", ...)
drawline(...)
drawText("Model_Type:ModelType", ...)
drawText("{I}", ...)
drawText("OOA_Type:OOAType", ...)
drawText("{I}", ...)
drawText("Name:string", ...)
drawText("background:Color", ...)
drawText("represents:class", ...)
drawline(...)
drawText("elementCreated(elem:instance):void", ...)
drawRectangle(...)
drawText("+Element Specification", ...)
drawText("{8,GD_ES}", ...)
drawline(...)
drawText("OOA_Type:OOAType", ...)
drawText("{I}", ...)
drawText("Name:string", ...)
drawText("internal:Color", ...)
drawText("represents:class", ...)
drawText("creator:string", ...)
drawText("isFixedAspectRatio:boolean", ...)
drawText("defaultWidth:integer", ...)
drawText("defaultHeight:integer", ...)
drawText("iconName:string", ...)
drawText("elementId:unique_id", ...)
drawText("{R16}", ...)
drawText("isFixedSize:boolean", ...)
drawText("hasFloatingText:boolean", ...)
drawText("hasNoInteriorColor:boolean", ...)
drawText("layer:integer", ...)
drawText("antiAliased:boolean", ...)
drawline(...)
drawText("defaultLayer():integer", ...)
drawText("elementCreated(elem:instance):void", ...)
drawRectangle(...)
drawText("+Element in Model Specification", ...)
drawText("{9,GD_EMS}", ...)
drawline(...)
drawText("OOA_Type:OOAType", ...)
drawText("{I,R11}", ...)
drawText("Model_Type:ModelType", ...)
drawText("{I,R11}", ...)
drawText("Model_OOA_Type:OOAType", ...)
drawText("{I,R11}", ...)
drawline(...)
drawRectangle(...)
drawText("+Element In Resize", ...)
drawText("{10,GD_EIR}", ...)
drawline(...)
drawText("diagramId:unique_id", ...)
drawText("{I,R12}", ...)
drawText("Vertex:Vertex", ...)
drawText("End:End", ...)
drawText("elementId:unique_id", ...)
drawText("{I,R12}", ...)
drawline(...)
drawText("dispose():void", ...)
drawText("finish():void", ...)
drawText("initialize():void", ...)
drawRectangle(...)
drawText("+Text In Move", ...)
drawText("{12,GD_TIM}", ...)
drawline(...)
drawText("diagramId:unique_id", ...)
drawText("{I,R14}", ...)
drawText("elementId:unique_id", ...)
drawText("{I,R14}", ...)
drawline(...)
drawRectangle(...)
drawText("+Client Class Dependency", ...)
drawText("{13,GD_CCD}", ...)
drawline(...)
drawText("OOA_Type:OOAType", ...)
drawText("{I,R17}", ...)
drawText("represents:class", ...)
drawText("{I}", ...)
drawline(...)
drawRectangle(...)
drawText("ModifyNonFullyLoadedModelTest::ooaofgraphics::UML 2.0 Diagram Interchange::Diagram", ...)
drawText("{5,DIM_DIA}", ...)
drawline(...)
drawText("diagramId:unique_id", ...)
drawText("{I}", ...)
drawText("name:string", ...)
drawText("zoom:real", ...)
drawText("viewportX:real", ...)
drawText("viewportY:real", ...)
drawText("Smb_ID:unique_id", ...)
drawText("{R317}", ...)
drawline(...)
drawRectangle(...)
drawText("ModifyNonFullyLoadedModelTest::ooaofgraphics::UML 2.0 Diagram Interchange::GraphEdge", ...)
drawText("{28,DIM_ED}", ...)
drawline(...)
drawText("first_conId:unique_id", ...)
drawText("{R320}", ...)
drawText("last_conId:unique_id", ...)
drawText("{R321}", ...)
drawText("elementId:unique_id", ...)
drawText("{I,R301}", ...)
drawline(...)
drawText("dispose():void", ...)
drawRectangle(...)
drawText("ModifyNonFullyLoadedModelTest::ooaofgraphics::UML 2.0 Diagram Interchange::Waypoint", ...)
drawText("{29,DIM_WAY}", ...)
drawline(...)
drawText("Way_ID:unique_id", ...)
drawText("{I}", ...)
drawText("positionX:real", ...)
drawText("positionY:real", ...)
drawText("edge_elementId:unique_id", ...)
drawText("{R319}", ...)
drawText("polyLine_elementId:unique_id", ...)
drawText("{R323}", ...)
drawText("previous_Way_ID:unique_id", ...)
drawText("{R324}", ...)
drawline(...)
drawText("dispose():void", ...)
drawRectangle(...)
drawText("ModifyNonFullyLoadedModelTest::ooaofgraphics::UML 2.0 Diagram Interchange::GraphElement", ...)
drawText("{1,DIM_GE}", ...)
drawline(...)
drawText("positionX:real", ...)
drawText("positionY:real", ...)
drawText("elementId:unique_id", ...)
drawText("{I,R302}", ...)
drawText("Smb_ID:unique_id", ...)
drawText("{R312}", ...)
drawline(...)
drawText("dispose():void", ...)
drawRectangle(...)
drawText("+Waypoint In Move", ...)
drawText("{14,GD_WIM}", ...)
drawline(...)
drawText("Way_ID:unique_id", ...)
drawText("{I,R24}", ...)
drawText("diagramId:unique_id", ...)
drawText("{I,R24}", ...)
drawText("originX:integer", ...)
drawText("originY:integer", ...)
drawline(...)
drawText("finalize():void", ...)
drawText("finalizeEndOnConnector():boolean", ...)
drawText("finalizeOnShape():boolean", ...)
drawText("finalizeOnWhitespace():boolean", ...)
drawText("finalizeStartOnConnector():boolean", ...)
drawText("initialize():void", ...)
drawRectangle(...)
drawText("+Element In Move", ...)
drawText("{15,GD_EIM}", ...)
drawline(...)
drawText("elementId:unique_id", ...)
drawText("{I,R25}", ...)
drawText("diagramId:unique_id", ...)
drawText("{I,R25}", ...)
drawText("startingX:real", ...)
drawText("startingY:real", ...)
drawline(...)
drawText("dispose():void", ...)
drawRectangle(...)
drawText("ModifyNonFullyLoadedModelTest::ooaofgraphics::UML 2.0 Diagram Interchange::GraphConnector", ...)
drawText("{6,DIM_CON}", ...)
drawline(...)
drawText("conId:unique_id", ...)
drawText("{I}", ...)
drawText("positionX:real", ...)
drawText("positionY:real", ...)
drawText("elementId:unique_id", ...)
drawText("{R311}", ...)
drawline(...)
drawText("dispose():void", ...)
drawRectangle(...)
drawText("+Anchor On Segment", ...)
drawText("{16,GD_AOS}", ...)
drawline(...)
drawText("conId:unique_id", ...)
drawText("{I,R26}", ...)
drawText("elementId:unique_id", ...)
drawText("{I,R26}", ...)
drawline(...)
drawText("is part of", ...)
drawText("R1", ...)
drawText("contains", ...)
drawText("1", ...)
drawText("*", ...)
drawText("is resized in", ...)
drawText("R12", ...)
drawText("is resizing", ...)
drawText("0..1", ...)
drawText("0..1", ...)
drawText("R14", ...)
drawText("0..1", ...)
drawText("0..1", ...)
drawText("is instance of", ...)
drawText("R9", ...)
drawText("has instance", ...)
drawText("1", ...)
drawText("*", ...)
drawText("is moving", ...)
drawText("R24", ...)
drawText("is moved by", ...)
drawText("*", ...)
drawText("0..1", ...)
drawText("is moving", ...)
drawText("R25", ...)
drawText("is moving in", ...)
drawText("*", ...)
drawText("1", ...)
drawText("R2", ...)
drawText("is instance of", ...)
drawText("R10", ...)
drawText("has instance", ...)
drawText("1", ...)
drawText("*", ...)
drawText("is being created by", ...)
drawText("R16", ...)
drawText("is creating", ...)
drawText("0..1", ...)
drawText("0..1", ...)
drawText("is DIM analog of", ...)
drawText("R23", ...)
drawText("is Graphical Data analog of", ...)
drawText("1", ...)
drawText("0..1", ...)
drawText("is text for", ...)
drawText("R27", ...)
drawText("has text", ...)
drawText("0..1", ...)
drawText("0..1", ...)
drawText("is text for", ...)
drawText("R8", ...)
drawText("has as a text", ...)
drawText("0..1", ...)
drawText("1..*", ...)
drawText("is part of", ...)
drawText("R6", ...)
drawText("has", ...)
drawText("1", ...)
drawText("1..*", ...)
drawText("has connector which ends at", ...)
drawText("R5", ...)
drawText("is the destination of connector ending at", ...)
drawText("0..1", ...)
drawText("0..1", ...)
drawText("follows", ...)
drawText("R7", ...)
drawText("precedes", ...)
drawText("0..1", ...)
drawText("0..1", ...)
drawText("R21", ...)
drawText("starting endpoint", ...)
drawText("1", ...)
drawText("1", ...)
drawText("R22", ...)
drawText("ending endpoint", ...)
drawText("1", ...)
drawText("1", ...)
drawText("is anchor on segment", ...)
drawText("R26", ...)
drawText("has anchor point", ...)
drawText("*", ...)
drawText("0..1", ...)
drawText("can appear on", ...)
drawText("R11", ...)
drawText("can show", ...)
drawText("*", ...)
drawText("*", ...)
drawText("is for", ...)
drawText("R17", ...)
drawText("has", ...)
drawText("1", ...)
drawText("*", ...)
drawText("R18", ...)
drawText("R20", ...)